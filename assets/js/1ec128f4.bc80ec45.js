"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[375],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(n),m=l,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,a=new Array(o);a[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,a[1]=i;for(var d=2;d<o;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(7294),l=n(4334);const o="tabItem_Ymn6";function a(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,l.Z)(o,a),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(3117),l=n(7294),o=n(4334),a=n(2389),i=n(7392),s=n(7094),d=n(2466);const c="tabList__CuJ",u="tabItem_LNqP";function p(e){var t,n;const{lazy:a,block:p,defaultValue:m,values:f,groupId:b,className:h}=e,v=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=f?f:v.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),y=(0,i.l)(k,((e,t)=>e.value===t.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const g=null===m?m:null!=(t=null!=m?m:null==(n=v.find((e=>e.props.default)))?void 0:n.props.value)?t:v[0].props.value;if(null!==g&&!k.some((e=>e.value===g)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+k.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:w,setTabGroupChoices:O}=(0,s.U)(),[T,P]=(0,l.useState)(g),L=[],{blockElementScrollPositionUntilNextRender:E}=(0,d.o5)();if(null!=b){const e=w[b];null!=e&&e!==T&&k.some((t=>t.value===e))&&P(e)}const N=e=>{const t=e.currentTarget,n=L.indexOf(t),r=k[n].value;r!==T&&(E(t),P(r),null!=b&&O(b,String(r)))},x=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var r;const t=L.indexOf(e.currentTarget)+1;n=null!=(r=L[t])?r:L[0];break}case"ArrowLeft":{var l;const t=L.indexOf(e.currentTarget)-1;n=null!=(l=L[t])?l:L[L.length-1];break}}null==(t=n)||t.focus()};return l.createElement("div",{className:(0,o.Z)("tabs-container",c)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":p},h)},k.map((e=>{let{value:t,label:n,attributes:a}=e;return l.createElement("li",(0,r.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>L.push(e),onKeyDown:x,onFocus:N,onClick:N},a,{className:(0,o.Z)("tabs__item",u,null==a?void 0:a.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),a?(0,l.cloneElement)(v.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function m(e){const t=(0,a.Z)();return l.createElement(p,(0,r.Z)({key:String(t)},e))}},9684:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>u});var r=n(3117),l=(n(7294),n(3905)),o=n(5488),a=n(5162);const i={sidebar_position:28,tags:["Linked List","Two Pointers"]},s="Middle of the Linked List",d={unversionedId:"codes/middle-of-the-linked-list",id:"codes/middle-of-the-linked-list",title:"Middle of the Linked List",description:"Problem",source:"@site/docs/codes/middle-of-the-linked-list.md",sourceDirName:"codes",slug:"/codes/middle-of-the-linked-list",permalink:"/CodePrime/docs/codes/middle-of-the-linked-list",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/codes/middle-of-the-linked-list.md",tags:[{label:"Linked List",permalink:"/CodePrime/docs/tags/linked-list"},{label:"Two Pointers",permalink:"/CodePrime/docs/tags/two-pointers"}],version:"current",sidebarPosition:28,frontMatter:{sidebar_position:28,tags:["Linked List","Two Pointers"]},sidebar:"Leetcode",previous:{title:"Reverse Linked List",permalink:"/CodePrime/docs/codes/reverse-linked-list"},next:{title:"Merge Two Sorted Lists",permalink:"/CodePrime/docs/codes/merge-two-sorted-lists"}},c={},u=[{value:"Problem",id:"problem",level:2},{value:"Solution Approach",id:"solution-approach",level:2}],p={toc:u};function m(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"middle-of-the-linked-list"},"Middle of the Linked List"),(0,l.kt)("h2",{id:"problem"},(0,l.kt)("a",{parentName:"h2",href:"https://leetcode.com/problems/middle-of-the-linked-list/"},"Problem")),(0,l.kt)("p",null,"Given the ",(0,l.kt)("code",null,"head")," of a singly linked list, return ",(0,l.kt)("em",null,"the middle node of the linked list"),"."),(0,l.kt)("p",null,"If there are two middle nodes, return ",(0,l.kt)("strong",null,"the second middle")," node."),(0,l.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Click - to see solution code"),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(a.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n   public:\n    ListNode* middleNode(ListNode* head) {\n        ListNode* temp;\n        temp = new ListNode;\n        temp = head;\n        int cnt = 0;\n        while (temp != NULL) {\n            cnt++;\n            temp = temp->next;\n        }\n        int i = 1;\n        while (i <= cnt / 2) {\n            head = head->next;\n            i++;\n        }\n        return head;\n    }\n};\n\n"))))))}m.isMDXComponent=!0}}]);