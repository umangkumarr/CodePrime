"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[8328],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),m=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=m(r),d=n,f=c["".concat(l,".").concat(d)]||c[d]||p[d]||o;return r?a.createElement(f,i(i({ref:t},u),{},{components:r})):a.createElement(f,i({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var m=2;m<o;m++)i[m]=r[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},8215:function(e,t,r){var a=r(7294);t.Z=function(e){var t=e.children,r=e.hidden,n=e.className;return a.createElement("div",{role:"tabpanel",hidden:r,className:n},t)}},9877:function(e,t,r){r.d(t,{Z:function(){return u}});var a=r(7462),n=r(7294),o=r(2389),i=r(9548),s=r(6010),l="tabItem_LplD";function m(e){var t,r,o,m=e.lazy,u=e.block,p=e.defaultValue,c=e.values,d=e.groupId,f=e.className,b=n.Children.map(e.children,(function(e){if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=c?c:b.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,i.lx)(h,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===p?p:null!=(t=null!=p?p:null==(r=b.find((function(e){return e.props.default})))?void 0:r.props.value)?t:null==(o=b[0])?void 0:o.props.value;if(null!==k&&!h.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,i.UB)(),y=g.tabGroupChoices,N=g.setTabGroupChoices,w=(0,n.useState)(k),P=w[0],S=w[1],D=[],E=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var O=y[d];null!=O&&O!==P&&h.some((function(e){return e.value===O}))&&S(O)}var T=function(e){var t=e.currentTarget,r=D.indexOf(t),a=h[r].value;a!==P&&(E(t),S(a),null!=d&&N(d,a))},x=function(e){var t,r=null;switch(e.key){case"ArrowRight":var a=D.indexOf(e.currentTarget)+1;r=D[a]||D[0];break;case"ArrowLeft":var n=D.indexOf(e.currentTarget)-1;r=D[n]||D[D.length-1]}null==(t=r)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":u},f)},h.map((function(e){var t=e.value,r=e.label,o=e.attributes;return n.createElement("li",(0,a.Z)({role:"tab",tabIndex:P===t?0:-1,"aria-selected":P===t,key:t,ref:function(e){return D.push(e)},onKeyDown:x,onFocus:T,onClick:T},o,{className:(0,s.Z)("tabs__item",l,null==o?void 0:o.className,{"tabs__item--active":P===t})}),null!=r?r:t)}))),m?(0,n.cloneElement)(b.filter((function(e){return e.props.value===P}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},b.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==P})}))))}function u(e){var t=(0,o.Z)();return n.createElement(m,(0,a.Z)({key:String(t)},e))}},2030:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return m},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return c},default:function(){return f}});var a=r(7462),n=r(3366),o=(r(7294),r(3905)),i=r(9877),s=r(8215),l=["components"],m={sidebar_position:6,tags:["Hash Table","String","Dynamic Programming","Trie","Memoization"]},u="Word Break",p={unversionedId:"Problems/StriverSDESheet/Day26/Word Break",id:"Problems/StriverSDESheet/Day26/Word Break",title:"Word Break",description:"Problem",source:"@site/docs/Problems/StriverSDESheet/Day26/Word Break.md",sourceDirName:"Problems/StriverSDESheet/Day26",slug:"/Problems/StriverSDESheet/Day26/Word Break",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day26/Word Break",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Problems/StriverSDESheet/Day26/Word Break.md",tags:[{label:"Hash Table",permalink:"/CodePrime/docs/tags/hash-table"},{label:"String",permalink:"/CodePrime/docs/tags/string"},{label:"Dynamic Programming",permalink:"/CodePrime/docs/tags/dynamic-programming"},{label:"Trie",permalink:"/CodePrime/docs/tags/trie"},{label:"Memoization",permalink:"/CodePrime/docs/tags/memoization"}],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,tags:["Hash Table","String","Dynamic Programming","Trie","Memoization"]},sidebar:"api",previous:{title:"Super Egg Drop",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day26/Super Egg Drop"},next:{title:"Palindrome Partitioning",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day26/Palindrome Partitioning"}},c=[{value:"Problem",id:"problem",children:[],level:2},{value:"Solution Approach",id:"solution-approach",children:[],level:2}],d={toc:c};function f(e){var t=e.components,r=(0,n.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"word-break"},"Word Break"),(0,o.kt)("h2",{id:"problem"},(0,o.kt)("a",{parentName:"h2",href:"https://leetcode.com/problems/word-break/"},"Problem")),(0,o.kt)("p",null,"Given a string ",(0,o.kt)("code",null,"s")," and a dictionary of strings ",(0,o.kt)("code",null,"wordDict"),", return ",(0,o.kt)("code",null,"true")," if ",(0,o.kt)("code",null,"s")," can be segmented into a space-separated sequence of one or more dictionary words."),(0,o.kt)("p",null,(0,o.kt)("strong",null,"Note")," that the same word in the dictionary may be reused multiple times in the segmentation."),(0,o.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,o.kt)("p",null,"Expected Time complexity: ",(0,o.kt)("span",{parentName:"p",className:"math math-inline"},(0,o.kt)("span",{parentName:"span",className:"katex"},(0,o.kt)("span",{parentName:"span",className:"katex-mathml"},(0,o.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,o.kt)("semantics",{parentName:"math"},(0,o.kt)("mrow",{parentName:"semantics"},(0,o.kt)("mi",{parentName:"mrow"},"O"),(0,o.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,o.kt)("msup",{parentName:"mrow"},(0,o.kt)("mi",{parentName:"msup"},"n"),(0,o.kt)("mn",{parentName:"msup"},"3")),(0,o.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,o.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n^3)")))),(0,o.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,o.kt)("span",{parentName:"span",className:"base"},(0,o.kt)("span",{parentName:"span",className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,o.kt)("span",{parentName:"span",className:"mopen"},"("),(0,o.kt)("span",{parentName:"span",className:"mord"},(0,o.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,o.kt)("span",{parentName:"span",className:"msupsub"},(0,o.kt)("span",{parentName:"span",className:"vlist-t"},(0,o.kt)("span",{parentName:"span",className:"vlist-r"},(0,o.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,o.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,o.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,o.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,o.kt)("span",{parentName:"span",className:"mord mtight"},"3")))))))),(0,o.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Click - to see solution code"),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n   public:\n    bool wordBreak(string s, vector<string>& wordDict) {\n        unordered_map<string, int> mp;\n        for (auto i : wordDict) mp[i] = 1;\n\n        vector<bool> dp(s.size() + 1);\n        dp[0] = true;\n        for (int i = 1; i <= s.size(); i++) {\n            for (int j = i - 1; j >= 0; j--) {\n                string w = s.substr(j, i - j);\n                if (mp.find(w) != mp.end() && dp[j]) dp[i] = true;\n            }\n        }\n\n        return dp[s.size()];\n    }\n};\n"))))))}f.isMDXComponent=!0}}]);