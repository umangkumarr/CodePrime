"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[1157],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>m});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),u=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},c=function(e){var r=u(e.components);return n.createElement(s.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(t),m=a,b=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return t?n.createElement(b,l(l({ref:r},c),{},{components:t})):n.createElement(b,l({ref:r},c))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=p;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=t[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8215:(e,r,t)=>{t.d(r,{Z:()=>a});var n=t(7294);const a=function(e){let{children:r,hidden:t,className:a}=e;return n.createElement("div",{role:"tabpanel",hidden:t,className:a},r)}},9877:(e,r,t)=>{t.d(r,{Z:()=>c});var n=t(7462),a=t(7294),o=t(2389),l=t(5773),i=t(6010);const s="tabItem_LplD";function u(e){var r,t,o;const{lazy:u,block:c,defaultValue:d,values:p,groupId:m,className:b}=e,v=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=p?p:v.map((e=>{let{props:{value:r,label:t,attributes:n}}=e;return{value:r,label:t,attributes:n}})),h=(0,l.lx)(f,((e,r)=>e.value===r.value));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===d?d:null!=(r=null!=d?d:null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)?r:null==(o=v[0])?void 0:o.props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:g,setTabGroupChoices:P}=(0,l.UB)(),[S,k]=(0,a.useState)(y),E=[],{blockElementScrollPositionUntilNextRender:D}=(0,l.o5)();if(null!=m){const e=g[m];null!=e&&e!==S&&f.some((r=>r.value===e))&&k(e)}const w=e=>{const r=e.currentTarget,t=E.indexOf(r),n=f[t].value;n!==S&&(D(r),k(n),null!=m&&P(m,n))},O=e=>{var r;let t=null;switch(e.key){case"ArrowRight":{const r=E.indexOf(e.currentTarget)+1;t=E[r]||E[0];break}case"ArrowLeft":{const r=E.indexOf(e.currentTarget)-1;t=E[r]||E[E.length-1];break}}null==(r=t)||r.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":c},b)},f.map((e=>{let{value:r,label:t,attributes:o}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:S===r?0:-1,"aria-selected":S===r,key:r,ref:e=>E.push(e),onKeyDown:O,onFocus:w,onClick:w},o,{className:(0,i.Z)("tabs__item",s,null==o?void 0:o.className,{"tabs__item--active":S===r})}),null!=t?t:r)}))),u?(0,a.cloneElement)(v.filter((e=>e.props.value===S))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map(((e,r)=>(0,a.cloneElement)(e,{key:r,hidden:e.props.value!==S})))))}function c(e){const r=(0,o.Z)();return a.createElement(u,(0,n.Z)({key:String(r)},e))}},6344:(e,r,t)=>{t.r(r),t.d(r,{frontMatter:()=>i,contentTitle:()=>s,metadata:()=>u,toc:()=>c,default:()=>p});var n=t(7462),a=(t(7294),t(3905)),o=t(9877),l=t(8215);const i={sidebar_position:6},s="Reverse Pairs",u={unversionedId:"Problems/StriverSDESheet/Day3/Reverse Pairs",id:"Problems/StriverSDESheet/Day3/Reverse Pairs",title:"Reverse Pairs",description:"Problem Link",source:"@site/docs/Problems/StriverSDESheet/Day3/Reverse Pairs.md",sourceDirName:"Problems/StriverSDESheet/Day3",slug:"/Problems/StriverSDESheet/Day3/Reverse Pairs",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day3/Reverse Pairs",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Problems/StriverSDESheet/Day3/Reverse Pairs.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"api",previous:{title:"Unique Paths",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day3/Unique Paths"},next:{title:"Two Sum",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day4/Two Sum"}},c=[{value:"Problem Link",id:"problem-link",children:[],level:2},{value:"Solution Code",id:"solution-code",children:[],level:2}],d={toc:c};function p(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"reverse-pairs"},"Reverse Pairs"),(0,a.kt)("h2",{id:"problem-link"},"Problem Link"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/reverse-pairs/"},"https://leetcode.com/problems/reverse-pairs/")),(0,a.kt)("h2",{id:"solution-code"},"Solution Code"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n   public:\n    int sort_and_count(vector<int>::iterator begin, vector<int>::iterator end) {\n        if (end - begin <= 1) return 0;\n        auto mid = begin + (end - begin) / 2;\n        int count = sort_and_count(begin, mid) + sort_and_count(mid, end);\n        for (auto i = begin, j = mid; i != mid; ++i) {\n            while (j != end and *i > 2L * *j) ++j;\n            count += j - mid;\n        }\n        inplace_merge(begin, mid, end);\n        return count;\n    }\n\n    int reversePairs(vector<int>& nums) {\n        return sort_and_count(nums.begin(), nums.end());\n    }\n};\n")))))}p.isMDXComponent=!0}}]);