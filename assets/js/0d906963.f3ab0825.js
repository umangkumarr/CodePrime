"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[8179],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8215:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(7294);const a=function(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},9877:(e,t,n)=>{n.d(t,{Z:()=>u});var r=n(7462),a=n(7294),l=n(2389),i=n(5773),o=n(6010);const s="tabItem_LplD";function c(e){var t,n,l;const{lazy:c,block:u,defaultValue:d,values:p,groupId:m,className:h}=e,b=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=p?p:b.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),v=(0,i.lx)(f,((e,t)=>e.value===t.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===d?d:null!=(t=null!=d?d:null==(n=b.find((e=>e.props.default)))?void 0:n.props.value)?t:null==(l=b[0])?void 0:l.props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:k,setTabGroupChoices:g}=(0,i.UB)(),[L,S]=(0,a.useState)(y),w=[],{blockElementScrollPositionUntilNextRender:E}=(0,i.o5)();if(null!=m){const e=k[m];null!=e&&e!==L&&f.some((t=>t.value===e))&&S(e)}const D=e=>{const t=e.currentTarget,n=w.indexOf(t),r=f[n].value;r!==L&&(E(t),S(r),null!=m&&g(m,r))},O=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=w.indexOf(e.currentTarget)+1;n=w[t]||w[0];break}case"ArrowLeft":{const t=w.indexOf(e.currentTarget)-1;n=w[t]||w[w.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":u},h)},f.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:L===t?0:-1,"aria-selected":L===t,key:t,ref:e=>w.push(e),onKeyDown:O,onFocus:D,onClick:D},l,{className:(0,o.Z)("tabs__item",s,null==l?void 0:l.className,{"tabs__item--active":L===t})}),null!=n?n:t)}))),c?(0,a.cloneElement)(b.filter((e=>e.props.value===L))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},b.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==L})))))}function u(e){const t=(0,l.Z)();return a.createElement(c,(0,r.Z)({key:String(t)},e))}},646:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>o,contentTitle:()=>s,metadata:()=>c,toc:()=>u,default:()=>p});var r=n(7462),a=(n(7294),n(3905)),l=n(9877),i=n(8215);const o={sidebar_position:6},s="Flattening a Linked List",c={unversionedId:"Problems/StriverSDESheet/Day6/Flattening a Linked List",id:"Problems/StriverSDESheet/Day6/Flattening a Linked List",title:"Flattening a Linked List",description:"Problem Link",source:"@site/docs/Problems/StriverSDESheet/Day6/Flattening a Linked List.md",sourceDirName:"Problems/StriverSDESheet/Day6",slug:"/Problems/StriverSDESheet/Day6/Flattening a Linked List",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day6/Flattening a Linked List",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Problems/StriverSDESheet/Day6/Flattening a Linked List.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"api",previous:{title:"Linked List Cycle II",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day6/Linked List Cycle II"},next:{title:"Rotate a LinkedList",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day7/Rotate a LinkedList"}},u=[{value:"Problem Link",id:"problem-link",children:[],level:2},{value:"Solution Code",id:"solution-code",children:[],level:2}],d={toc:u};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"flattening-a-linked-list"},"Flattening a Linked List"),(0,a.kt)("h2",{id:"problem-link"},"Problem Link"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://practice.geeksforgeeks.org/problems/flattening-a-linked-list/1"},"https://practice.geeksforgeeks.org/problems/flattening-a-linked-list/1")),(0,a.kt)("h2",{id:"solution-code"},"Solution Code"),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"Node* MergeList(Node* l1, Node* l2) {\n    Node* newhead = new Node(-1);\n    Node* ptr = newhead;\n    while (l1 && l2) {\n        if (l1->data <= l2->data) {\n            ptr->child = l1;\n            ptr = ptr->child;\n            l1 = l1->child;\n        } else {\n            ptr->child = l2;\n            ptr = ptr->child;\n            l2 = l2->child;\n        }\n    }\n    if (l1) {\n        ptr->child = l1;\n    }\n    if (l2) {\n        ptr->child = l2;\n    }\n    newhead->child->next = NULL;\n    return newhead->child;\n}\n\nNode* flattenLinkedList(Node* head) {\n    if (head == NULL || head->next == NULL) return head;\n    head->next = flattenLinkedList(head->next);\n    head = MergeList(head, head->next);\n    return head;\n}\n")))))}p.isMDXComponent=!0}}]);