"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[9506],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),c=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(a),d=r,h=u["".concat(i,".").concat(d)]||u[d]||m[d]||s;return a?n.createElement(h,l(l({ref:t},p),{},{components:a})):n.createElement(h,l({ref:t},p))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,l=new Array(s);l[0]=u;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<s;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8215:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(7294);const r=function(e){let{children:t,hidden:a,className:r}=e;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},9877:(e,t,a)=>{a.d(t,{Z:()=>p});var n=a(7462),r=a(7294),s=a(2389),l=a(5773),o=a(6010);const i="tabItem_LplD";function c(e){var t,a,s;const{lazy:c,block:p,defaultValue:m,values:u,groupId:d,className:h}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=u?u:b.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),f=(0,l.lx)(k,((e,t)=>e.value===t.value));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const v=null===m?m:null!=(t=null!=m?m:null==(a=b.find((e=>e.props.default)))?void 0:a.props.value)?t:null==(s=b[0])?void 0:s.props.value;if(null!==v&&!k.some((e=>e.value===v)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+k.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:g,setTabGroupChoices:N}=(0,l.UB)(),[y,w]=(0,r.useState)(v),j=[],{blockElementScrollPositionUntilNextRender:O}=(0,l.o5)();if(null!=d){const e=g[d];null!=e&&e!==y&&k.some((t=>t.value===e))&&w(e)}const z=e=>{const t=e.currentTarget,a=j.indexOf(t),n=k[a].value;n!==y&&(O(t),w(n),null!=d&&N(d,n))},x=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=j.indexOf(e.currentTarget)+1;a=j[t]||j[0];break}case"ArrowLeft":{const t=j.indexOf(e.currentTarget)-1;a=j[t]||j[j.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":p},h)},k.map((e=>{let{value:t,label:a,attributes:s}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>j.push(e),onKeyDown:x,onFocus:z,onClick:z},s,{className:(0,o.Z)("tabs__item",i,null==s?void 0:s.className,{"tabs__item--active":y===t})}),null!=a?a:t)}))),c?(0,r.cloneElement)(b.filter((e=>e.props.value===y))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},b.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function p(e){const t=(0,s.Z)();return r.createElement(c,(0,n.Z)({key:String(t)},e))}},63:(e,t,a)=>{a.r(t),a.d(t,{frontMatter:()=>o,contentTitle:()=>i,metadata:()=>c,toc:()=>p,default:()=>u});var n=a(7462),r=(a(7294),a(3905)),s=a(9877),l=a(8215);const o={displayed_sidebar:null,sidebar_position:5,tags:["Array","Backtracking"]},i="Rat in a Maze Problem I",c={unversionedId:"codes/rat-in-a-maze-problemI",id:"codes/rat-in-a-maze-problemI",title:"Rat in a Maze Problem I",description:"Problem",source:"@site/docs/codes/rat-in-a-maze-problemI.md",sourceDirName:"codes",slug:"/codes/rat-in-a-maze-problemI",permalink:"/docs/codes/rat-in-a-maze-problemI",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/codes/rat-in-a-maze-problemI.md",tags:[{label:"Array",permalink:"/docs/tags/array"},{label:"Backtracking",permalink:"/docs/tags/backtracking"}],version:"current",sidebarPosition:5,frontMatter:{displayed_sidebar:null,sidebar_position:5,tags:["Array","Backtracking"]}},p=[{value:"Problem",id:"problem",children:[],level:2},{value:"Solution Approach",id:"solution-approach",children:[],level:2}],m={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rat-in-a-maze-problem-i"},"Rat in a Maze Problem I"),(0,r.kt)("h2",{id:"problem"},(0,r.kt)("a",{parentName:"h2",href:"https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1"},"Problem")),(0,r.kt)("p",null,(0,r.kt)("span",null,"Consider a rat placed at ",(0,r.kt)("strong",null,"(0, 0)")," in a square matrix",(0,r.kt)("strong",null," "),"of order ",(0,r.kt)("strong",null,"N * N"),". It has to reach the destination at ",(0,r.kt)("strong",null,"(N - 1, N - 1)"),". Find all possible paths that the rat can take to reach from source to destination. The directions in which the rat can move are ",(0,r.kt)("strong",null,"'U'(up)"),", ",(0,r.kt)("strong",null,"'D'(down)"),", ",(0,r.kt)("strong",null,"'L' (left)"),", ",(0,r.kt)("strong",null,"'R' (right)"),". Value 0 at a cell in the matrix represents that it is blocked and rat cannot move to it while value 1 at a cell in the matrix represents that\xa0rat\xa0can be travel\xa0through it.",(0,r.kt)("br",null),(0,r.kt)("strong",null,"Note"),": In a path, no cell can be visited more than one time."),"\xa0",(0,r.kt)("span",null,"If the source cell is\xa00, the rat cannot move to any other cell.")),(0,r.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,r.kt)("p",null,"Use Backtracking and find all the possible ways of reaching the cell ","[N, N]",";"),(0,r.kt)("p",null,"Expected Time complexity: ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("msup",{parentName:"mrow"},(0,r.kt)("mn",{parentName:"msup"},"3"),(0,r.kt)("mi",{parentName:"msup"},"n")),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(3^n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord"},"3"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.6644em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"n")))))))),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click - to see solution code"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n    vector<vector<int>> maze;\n    vector<string> ans;\n    string s;\n    int n;\n\n   public:\n    void compute(int i, int j) {\n        if (i == n - 1 && j == n - 1) {\n            ans.push_back(s);\n            return;\n        }\n\n        if (i > 0 && maze[i - 1][j]) {\n            maze[i][j] = 0;\n            s.push_back('U');\n            compute(i - 1, j);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n\n        if (j > 0 && maze[i][j - 1]) {\n            maze[i][j] = 0;\n            s.push_back('L');\n            compute(i, j - 1);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n\n        if (i < n - 1 && maze[i + 1][j]) {\n            maze[i][j] = 0;\n            s.push_back('D');\n            compute(i + 1, j);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n\n        if (j < n - 1 && maze[i][j + 1]) {\n            maze[i][j] = 0;\n            s.push_back('R');\n            compute(i, j + 1);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n    }\n\n    vector<string> findPath(vector<vector<int>> &m, int n) {\n        this->n = n;\n        this->maze = m;\n        s = \"\";\n        this->n = n;\n        if (maze[0][0]) compute(0, 0);\n        return ans;\n    }\n};\n"))))))}u.isMDXComponent=!0}}]);