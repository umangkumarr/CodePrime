"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[3758],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),c=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},m=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=c(a),d=r,h=p["".concat(i,".").concat(d)]||p[d]||u[d]||l;return a?n.createElement(h,s(s({ref:t},m),{},{components:a})):n.createElement(h,s({ref:t},m))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=p;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var c=2;c<l;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},8215:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(7294);const r=function(e){let{children:t,hidden:a,className:r}=e;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},9877:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(7462),r=a(7294),l=a(2389),s=a(5773),o=a(6010);const i="tabItem_LplD";function c(e){var t,a,l;const{lazy:c,block:m,defaultValue:u,values:p,groupId:d,className:h}=e,k=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=p?p:k.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),g=(0,s.lx)(b,((e,t)=>e.value===t.value));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const f=null===u?u:null!=(t=null!=u?u:null==(a=k.find((e=>e.props.default)))?void 0:a.props.value)?t:null==(l=k[0])?void 0:l.props.value;if(null!==f&&!b.some((e=>e.value===f)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+f+'" but none of its children has the corresponding value. Available values are: '+b.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:v,setTabGroupChoices:y}=(0,s.UB)(),[N,w]=(0,r.useState)(f),T=[],{blockElementScrollPositionUntilNextRender:O}=(0,s.o5)();if(null!=d){const e=v[d];null!=e&&e!==N&&b.some((t=>t.value===e))&&w(e)}const E=e=>{const t=e.currentTarget,a=T.indexOf(t),n=b[a].value;n!==N&&(O(t),w(n),null!=d&&y(d,n))},x=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;a=T[t]||T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;a=T[t]||T[T.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":m},h)},b.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>T.push(e),onKeyDown:x,onFocus:E,onClick:E},l,{className:(0,o.Z)("tabs__item",i,null==l?void 0:l.className,{"tabs__item--active":N===t})}),null!=a?a:t)}))),c?(0,r.cloneElement)(k.filter((e=>e.props.value===N))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},k.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,l.Z)();return r.createElement(c,(0,n.Z)({key:String(t)},e))}},7361:(e,t,a)=>{a.r(t),a.d(t,{frontMatter:()=>o,contentTitle:()=>i,metadata:()=>c,toc:()=>m,default:()=>p});var n=a(7462),r=(a(7294),a(3905)),l=a(9877),s=a(8215);const o={displayed_sidebar:null,sidebar_position:145,tags:["Tree","Design","Binary Search Tree","Heap (Priority Queue)","Binary Tree","Data Stream"]},i="Kth Largest Element in a Stream",c={unversionedId:"codes/kth-largest-element-in-a-stream",id:"codes/kth-largest-element-in-a-stream",title:"Kth Largest Element in a Stream",description:"Problem",source:"@site/docs/codes/kth-largest-element-in-a-stream.md",sourceDirName:"codes",slug:"/codes/kth-largest-element-in-a-stream",permalink:"/docs/codes/kth-largest-element-in-a-stream",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/codes/kth-largest-element-in-a-stream.md",tags:[{label:"Tree",permalink:"/docs/tags/tree"},{label:"Design",permalink:"/docs/tags/design"},{label:"Binary Search Tree",permalink:"/docs/tags/binary-search-tree"},{label:"Heap (Priority Queue)",permalink:"/docs/tags/heap-priority-queue"},{label:"Binary Tree",permalink:"/docs/tags/binary-tree"},{label:"Data Stream",permalink:"/docs/tags/data-stream"}],version:"current",sidebarPosition:145,frontMatter:{displayed_sidebar:null,sidebar_position:145,tags:["Tree","Design","Binary Search Tree","Heap (Priority Queue)","Binary Tree","Data Stream"]}},m=[{value:"Problem",id:"problem",children:[],level:2},{value:"Solution Approach",id:"solution-approach",children:[],level:2}],u={toc:m};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"kth-largest-element-in-a-stream"},"Kth Largest Element in a Stream"),(0,r.kt)("h2",{id:"problem"},(0,r.kt)("a",{parentName:"h2",href:"https://leetcode.com/problems/kth-largest-element-in-a-stream/"},"Problem")),(0,r.kt)("p",null,"Design a class to find the ",(0,r.kt)("code",null,"kth")," largest element in a stream. Note that it is the ",(0,r.kt)("code",null,"kth")," largest element in the sorted order, not the ",(0,r.kt)("code",null,"kth")," distinct element."),(0,r.kt)("p",null,"Implement ",(0,r.kt)("code",null,"KthLargest")," class:"),(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("code",null,"KthLargest(int k, int[] nums)")," Initializes the object with the integer ",(0,r.kt)("code",null,"k")," and the stream of integers ",(0,r.kt)("code",null,"nums"),"."),(0,r.kt)("li",null,(0,r.kt)("code",null,"int add(int val)")," Appends the integer ",(0,r.kt)("code",null,"val")," to the stream and returns the element representing the ",(0,r.kt)("code",null,"kth")," largest element in the stream.")),(0,r.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,r.kt)("p",null,"Expected Time complexity: ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click - to see solution code"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class KthLargest {\n    vector<int> num;\n    int k;\n    int n;\n\n   public:\n    KthLargest(int kk, vector<int>& nums) {\n        this->num = nums;\n        this->k = kk;\n        this->n = nums.size();\n    }\n\n    int add(int val) {\n        num.push_back(val);\n        n++;\n        nth_element(num.begin(), num.begin() + n - k, num.end());\n        return num[n - k];\n    }\n};\n\n"))))))}p.isMDXComponent=!0}}]);