"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[375],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=d(n),m=l,f=p["".concat(s,".").concat(m)]||p[m]||c[m]||o;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,a=new Array(o);a[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,a[1]=i;for(var d=2;d<o;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8215:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(7294);const l=function(e){let{children:t,hidden:n,className:l}=e;return r.createElement("div",{role:"tabpanel",hidden:n,className:l},t)}},9877:(e,t,n)=>{n.d(t,{Z:()=>u});var r=n(7462),l=n(7294),o=n(2389),a=n(5773),i=n(6010);const s="tabItem_LplD";function d(e){var t,n,o;const{lazy:d,block:u,defaultValue:c,values:p,groupId:m,className:f}=e,h=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=p?p:h.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),v=(0,a.lx)(b,((e,t)=>e.value===t.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===c?c:null!=(t=null!=c?c:null==(n=h.find((e=>e.props.default)))?void 0:n.props.value)?t:null==(o=h[0])?void 0:o.props.value;if(null!==k&&!b.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+b.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:y,setTabGroupChoices:g}=(0,a.UB)(),[w,O]=(0,l.useState)(k),T=[],{blockElementScrollPositionUntilNextRender:E}=(0,a.o5)();if(null!=m){const e=y[m];null!=e&&e!==w&&b.some((t=>t.value===e))&&O(e)}const N=e=>{const t=e.currentTarget,n=T.indexOf(t),r=b[n].value;r!==w&&(E(t),O(r),null!=m&&g(m,r))},L=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]||T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]||T[T.length-1];break}}null==(t=n)||t.focus()};return l.createElement("div",{className:"tabs-container"},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":u},f)},b.map((e=>{let{value:t,label:n,attributes:o}=e;return l.createElement("li",(0,r.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>T.push(e),onKeyDown:L,onFocus:N,onClick:N},o,{className:(0,i.Z)("tabs__item",s,null==o?void 0:o.className,{"tabs__item--active":w===t})}),null!=n?n:t)}))),d?(0,l.cloneElement)(h.filter((e=>e.props.value===w))[0],{className:"margin-vert--md"}):l.createElement("div",{className:"margin-vert--md"},h.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function u(e){const t=(0,o.Z)();return l.createElement(d,(0,r.Z)({key:String(t)},e))}},9684:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>s,metadata:()=>d,toc:()=>u,default:()=>p});var r=n(7462),l=(n(7294),n(3905)),o=n(9877),a=n(8215);const i={displayed_sidebar:null,sidebar_position:28,tags:["Linked List","Two Pointers"]},s="Middle of the Linked List",d={unversionedId:"codes/middle-of-the-linked-list",id:"codes/middle-of-the-linked-list",title:"Middle of the Linked List",description:"Problem",source:"@site/docs/codes/middle-of-the-linked-list.md",sourceDirName:"codes",slug:"/codes/middle-of-the-linked-list",permalink:"/docs/codes/middle-of-the-linked-list",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/codes/middle-of-the-linked-list.md",tags:[{label:"Linked List",permalink:"/docs/tags/linked-list"},{label:"Two Pointers",permalink:"/docs/tags/two-pointers"}],version:"current",sidebarPosition:28,frontMatter:{displayed_sidebar:null,sidebar_position:28,tags:["Linked List","Two Pointers"]}},u=[{value:"Problem",id:"problem",children:[],level:2},{value:"Solution Approach",id:"solution-approach",children:[],level:2}],c={toc:u};function p(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"middle-of-the-linked-list"},"Middle of the Linked List"),(0,l.kt)("h2",{id:"problem"},(0,l.kt)("a",{parentName:"h2",href:"https://leetcode.com/problems/middle-of-the-linked-list/"},"Problem")),(0,l.kt)("p",null,"Given the ",(0,l.kt)("code",null,"head")," of a singly linked list, return ",(0,l.kt)("em",null,"the middle node of the linked list"),"."),(0,l.kt)("p",null,"If there are two middle nodes, return ",(0,l.kt)("strong",null,"the second middle")," node."),(0,l.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Click - to see solution code"),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(a.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n   public:\n    ListNode* middleNode(ListNode* head) {\n        ListNode* temp;\n        temp = new ListNode;\n        temp = head;\n        int cnt = 0;\n        while (temp != NULL) {\n            cnt++;\n            temp = temp->next;\n        }\n        int i = 1;\n        while (i <= cnt / 2) {\n            head = head->next;\n            i++;\n        }\n        return head;\n    }\n};\n\n"))))))}p.isMDXComponent=!0}}]);