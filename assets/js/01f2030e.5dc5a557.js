"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[3882],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(r),m=l,v=p["".concat(i,".").concat(m)]||p[m]||d[m]||a;return r?n.createElement(v,o(o({ref:t},c),{},{components:r})):n.createElement(v,o({ref:t},c))}));function m(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,o[1]=s;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8215:(e,t,r)=>{r.d(t,{Z:()=>l});var n=r(7294);const l=function(e){let{children:t,hidden:r,className:l}=e;return n.createElement("div",{role:"tabpanel",hidden:r,className:l},t)}},9877:(e,t,r)=>{r.d(t,{Z:()=>c});var n=r(7462),l=r(7294),a=r(2389),o=r(5773),s=r(6010);const i="tabItem_LplD";function u(e){var t,r,a;const{lazy:u,block:c,defaultValue:d,values:p,groupId:m,className:v}=e,b=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=p?p:b.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),h=(0,o.lx)(f,((e,t)=>e.value===t.value));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===d?d:null!=(t=null!=d?d:null==(r=b.find((e=>e.props.default)))?void 0:r.props.value)?t:null==(a=b[0])?void 0:a.props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:k,setTabGroupChoices:g}=(0,o.UB)(),[L,O]=(0,l.useState)(y),w=[],{blockElementScrollPositionUntilNextRender:x}=(0,o.o5)();if(null!=m){const e=k[m];null!=e&&e!==L&&f.some((t=>t.value===e))&&O(e)}const N=e=>{const t=e.currentTarget,r=w.indexOf(t),n=f[r].value;n!==L&&(x(t),O(n),null!=m&&g(m,n))},E=e=>{var t;let r=null;switch(e.key){case"ArrowRight":{const t=w.indexOf(e.currentTarget)+1;r=w[t]||w[0];break}case"ArrowLeft":{const t=w.indexOf(e.currentTarget)-1;r=w[t]||w[w.length-1];break}}null==(t=r)||t.focus()};return l.createElement("div",{className:"tabs-container"},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":c},v)},f.map((e=>{let{value:t,label:r,attributes:a}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:L===t?0:-1,"aria-selected":L===t,key:t,ref:e=>w.push(e),onKeyDown:E,onFocus:N,onClick:N},a,{className:(0,s.Z)("tabs__item",i,null==a?void 0:a.className,{"tabs__item--active":L===t})}),null!=r?r:t)}))),u?(0,l.cloneElement)(b.filter((e=>e.props.value===L))[0],{className:"margin-vert--md"}):l.createElement("div",{className:"margin-vert--md"},b.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==L})))))}function c(e){const t=(0,a.Z)();return l.createElement(u,(0,n.Z)({key:String(t)},e))}},2185:(e,t,r)=>{r.r(t),r.d(t,{frontMatter:()=>s,contentTitle:()=>i,metadata:()=>u,toc:()=>c,default:()=>p});var n=r(7462),l=(r(7294),r(3905)),a=r(9877),o=r(8215);const s={displayed_sidebar:null,sidebar_position:27,tags:["Linked List","Recursion"]},i="Reverse Linked List",u={unversionedId:"codes/reverse-linked-list",id:"codes/reverse-linked-list",title:"Reverse Linked List",description:"Problem",source:"@site/docs/codes/reverse-linked-list.md",sourceDirName:"codes",slug:"/codes/reverse-linked-list",permalink:"/CodePrime/docs/codes/reverse-linked-list",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/codes/reverse-linked-list.md",tags:[{label:"Linked List",permalink:"/CodePrime/docs/tags/linked-list"},{label:"Recursion",permalink:"/CodePrime/docs/tags/recursion"}],version:"current",sidebarPosition:27,frontMatter:{displayed_sidebar:null,sidebar_position:27,tags:["Linked List","Recursion"]}},c=[{value:"Problem",id:"problem",children:[],level:2},{value:"Solution Approach",id:"solution-approach",children:[],level:2}],d={toc:c};function p(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"reverse-linked-list"},"Reverse Linked List"),(0,l.kt)("h2",{id:"problem"},(0,l.kt)("a",{parentName:"h2",href:"https://leetcode.com/problems/reverse-linked-list/"},"Problem")),(0,l.kt)("p",null,"Given the ",(0,l.kt)("code",null,"head")," of a singly linked list, reverse the list, and return ",(0,l.kt)("em",null,"the reversed list"),"."),(0,l.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Click - to see solution code"),(0,l.kt)(a.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n    ListNode* root;\n\n   public:\n    void reverse(ListNode* temp) {\n        if (temp->next->next == NULL) {\n            temp->next->next = temp;\n            root = temp->next;\n            return;\n        } else\n            reverse(temp->next);\n        temp->next->next = temp;\n    }\n\n    ListNode* reverseList(ListNode* head) {\n        if (head == NULL) return NULL;\n        if (head->next == NULL) return head;\n        ListNode* temp = head;\n        reverse(temp);\n        head->next = NULL;\n        return root;\n    }\n};\n\n"))))))}p.isMDXComponent=!0}}]);