"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[9898],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>d});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=n.createContext({}),m=function(e){var a=n.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},p=function(e){var a=m(e.components);return n.createElement(i.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=m(t),d=r,b=u["".concat(i,".").concat(d)]||u[d]||c[d]||s;return t?n.createElement(b,l(l({ref:a},p),{},{components:t})):n.createElement(b,l({ref:a},p))}));function d(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,l=new Array(s);l[0]=u;var o={};for(var i in a)hasOwnProperty.call(a,i)&&(o[i]=a[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var m=2;m<s;m++)l[m]=t[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8215:(e,a,t)=>{t.d(a,{Z:()=>r});var n=t(7294);const r=function(e){let{children:a,hidden:t,className:r}=e;return n.createElement("div",{role:"tabpanel",hidden:t,className:r},a)}},9877:(e,a,t)=>{t.d(a,{Z:()=>p});var n=t(7462),r=t(7294),s=t(2389),l=t(5773),o=t(6010);const i="tabItem_LplD";function m(e){var a,t,s;const{lazy:m,block:p,defaultValue:c,values:u,groupId:d,className:b}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=u?u:h.map((e=>{let{props:{value:a,label:t,attributes:n}}=e;return{value:a,label:t,attributes:n}})),v=(0,l.lx)(k,((e,a)=>e.value===a.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const f=null===c?c:null!=(a=null!=c?c:null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)?a:null==(s=h[0])?void 0:s.props.value;if(null!==f&&!k.some((e=>e.value===f)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+f+'" but none of its children has the corresponding value. Available values are: '+k.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:y,setTabGroupChoices:g}=(0,l.UB)(),[N,P]=(0,r.useState)(f),j=[],{blockElementScrollPositionUntilNextRender:w}=(0,l.o5)();if(null!=d){const e=y[d];null!=e&&e!==N&&k.some((a=>a.value===e))&&P(e)}const S=e=>{const a=e.currentTarget,t=j.indexOf(a),n=k[t].value;n!==N&&(w(a),P(n),null!=d&&g(d,n))},E=e=>{var a;let t=null;switch(e.key){case"ArrowRight":{const a=j.indexOf(e.currentTarget)+1;t=j[a]||j[0];break}case"ArrowLeft":{const a=j.indexOf(e.currentTarget)-1;t=j[a]||j[j.length-1];break}}null==(a=t)||a.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":p},b)},k.map((e=>{let{value:a,label:t,attributes:s}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===a?0:-1,"aria-selected":N===a,key:a,ref:e=>j.push(e),onKeyDown:E,onFocus:S,onClick:S},s,{className:(0,o.Z)("tabs__item",i,null==s?void 0:s.className,{"tabs__item--active":N===a})}),null!=t?t:a)}))),m?(0,r.cloneElement)(h.filter((e=>e.props.value===N))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},h.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==N})))))}function p(e){const a=(0,s.Z)();return r.createElement(m,(0,n.Z)({key:String(a)},e))}},8797:(e,a,t)=>{t.r(a),t.d(a,{frontMatter:()=>o,contentTitle:()=>i,metadata:()=>m,toc:()=>p,default:()=>u});var n=t(7462),r=(t(7294),t(3905)),s=t(9877),l=t(8215);const o={sidebar_position:5,tags:["Array","Backtracking"]},i="Rat in a Maze Problem I",m={unversionedId:"Problems/StriverSDESheet/Day10/Rat in a Maze ProblemI",id:"Problems/StriverSDESheet/Day10/Rat in a Maze ProblemI",title:"Rat in a Maze Problem I",description:"Problem Link",source:"@site/docs/Problems/StriverSDESheet/Day10/Rat in a Maze ProblemI.md",sourceDirName:"Problems/StriverSDESheet/Day10",slug:"/Problems/StriverSDESheet/Day10/Rat in a Maze ProblemI",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day10/Rat in a Maze ProblemI",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Problems/StriverSDESheet/Day10/Rat in a Maze ProblemI.md",tags:[{label:"Array",permalink:"/CodePrime/docs/tags/array"},{label:"Backtracking",permalink:"/CodePrime/docs/tags/backtracking"}],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,tags:["Array","Backtracking"]},sidebar:"api",previous:{title:"M-Coloring Problem",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day10/MColoring Problem"},next:{title:"Word Break",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day10/Word Break"}},p=[{value:"Problem Link",id:"problem-link",children:[],level:2},{value:"Solution Approach",id:"solution-approach",children:[],level:2}],c={toc:p};function u(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rat-in-a-maze-problem-i"},"Rat in a Maze Problem I"),(0,r.kt)("h2",{id:"problem-link"},"Problem Link"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1"},"https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1")),(0,r.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,r.kt)("p",null,"Use Backtracking and find all the possible ways of reaching the cell ","[N, N]",";"),(0,r.kt)("p",null,"Expected Time complexity: ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("msup",{parentName:"mrow"},(0,r.kt)("mn",{parentName:"msup"},"3"),(0,r.kt)("mi",{parentName:"msup"},"n")),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(3^n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord"},"3"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.6644em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"n")))))))),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click - to see solution code"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n    vector<vector<int>> maze;\n    vector<string> ans;\n    string s;\n    int n;\n\n   public:\n    void compute(int i, int j) {\n        if (i == n - 1 && j == n - 1) {\n            ans.push_back(s);\n            return;\n        }\n\n        if (i > 0 && maze[i - 1][j]) {\n            maze[i][j] = 0;\n            s.push_back('U');\n            compute(i - 1, j);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n\n        if (j > 0 && maze[i][j - 1]) {\n            maze[i][j] = 0;\n            s.push_back('L');\n            compute(i, j - 1);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n\n        if (i < n - 1 && maze[i + 1][j]) {\n            maze[i][j] = 0;\n            s.push_back('D');\n            compute(i + 1, j);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n\n        if (j < n - 1 && maze[i][j + 1]) {\n            maze[i][j] = 0;\n            s.push_back('R');\n            compute(i, j + 1);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n    }\n\n    vector<string> findPath(vector<vector<int>> &m, int n) {\n        this->n = n;\n        this->maze = m;\n        s = \"\";\n        this->n = n;\n        if (maze[0][0]) compute(0, 0);\n        return ans;\n    }\n};\n"))))))}u.isMDXComponent=!0}}]);