"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[274],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(r),m=o,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return r?n.createElement(f,a(a({ref:t},c),{},{components:r})):n.createElement(f,a({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8215:function(e,t,r){var n=r(7294);t.Z=function(e){var t=e.children,r=e.hidden,o=e.className;return n.createElement("div",{role:"tabpanel",hidden:r,className:o},t)}},9877:function(e,t,r){r.d(t,{Z:function(){return c}});var n=r(7462),o=r(7294),i=r(2389),a=r(9548),l=r(6010),s="tabItem_LplD";function u(e){var t,r,i,u=e.lazy,c=e.block,d=e.defaultValue,p=e.values,m=e.groupId,f=e.className,v=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=p?p:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),h=(0,a.lx)(b,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===d?d:null!=(t=null!=d?d:null==(r=v.find((function(e){return e.props.default})))?void 0:r.props.value)?t:null==(i=v[0])?void 0:i.props.value;if(null!==y&&!b.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,a.UB)(),S=g.tabGroupChoices,w=g.setTabGroupChoices,L=(0,o.useState)(y),k=L[0],E=L[1],N=[],T=(0,a.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var D=S[m];null!=D&&D!==k&&b.some((function(e){return e.value===D}))&&E(D)}var O=function(e){var t=e.currentTarget,r=N.indexOf(t),n=b[r].value;n!==k&&(T(t),E(n),null!=m&&w(m,n))},x=function(e){var t,r=null;switch(e.key){case"ArrowRight":var n=N.indexOf(e.currentTarget)+1;r=N[n]||N[0];break;case"ArrowLeft":var o=N.indexOf(e.currentTarget)-1;r=N[o]||N[N.length-1]}null==(t=r)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":c},f)},b.map((function(e){var t=e.value,r=e.label,i=e.attributes;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,key:t,ref:function(e){return N.push(e)},onKeyDown:x,onFocus:O,onClick:O},i,{className:(0,l.Z)("tabs__item",s,null==i?void 0:i.className,{"tabs__item--active":k===t})}),null!=r?r:t)}))),u?(0,o.cloneElement)(v.filter((function(e){return e.props.value===k}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==k})}))))}function c(e){var t=(0,i.Z)();return o.createElement(u,(0,n.Z)({key:String(t)},e))}},799:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return p},default:function(){return f}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=r(9877),l=r(8215),s=["components"],u={sidebar_position:3},c="Merge Two Sorted Lists",d={unversionedId:"StriverSDESheet/Day5/Merge Two Sorted Lists",id:"StriverSDESheet/Day5/Merge Two Sorted Lists",title:"Merge Two Sorted Lists",description:"Problem Link",source:"@site/docs/StriverSDESheet/Day5/Merge Two Sorted Lists.md",sourceDirName:"StriverSDESheet/Day5",slug:"/StriverSDESheet/Day5/Merge Two Sorted Lists",permalink:"/CodePrime/docs/StriverSDESheet/Day5/Merge Two Sorted Lists",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/StriverSDESheet/Day5/Merge Two Sorted Lists.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Middle of the Linked List",permalink:"/CodePrime/docs/StriverSDESheet/Day5/Middle of the Linked List"},next:{title:"Remove Nth Node From End of List",permalink:"/CodePrime/docs/StriverSDESheet/Day5/Remove Nth Node From End of List"}},p=[{value:"Problem Link",id:"problem-link",children:[],level:2},{value:"Solution Code",id:"solution-code",children:[],level:2}],m={toc:p};function f(e){var t=e.components,r=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"merge-two-sorted-lists"},"Merge Two Sorted Lists"),(0,i.kt)("h2",{id:"problem-link"},"Problem Link"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/merge-two-sorted-lists/"},"https://leetcode.com/problems/merge-two-sorted-lists/")),(0,i.kt)("h2",{id:"solution-code"},"Solution Code"),(0,i.kt)(a.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n   public:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        if (list1 == NULL) return list2;\n        if (list2 == NULL) return list1;\n\n        if (list1->val > list2->val) swap(list1, list2);\n        ListNode* head;\n        head = (ListNode*)malloc(sizeof(ListNode*));\n        head = list1;\n\n        while (list1->next != NULL && list2 != NULL) {\n            if (list1->next->val <= list2->val) {\n                list1 = list1->next;\n                continue;\n            }\n            ListNode* temp;\n            temp = (ListNode*)malloc(sizeof(ListNode*));\n            temp = list2;\n            list2 = list2->next;\n            temp->next = list1->next;\n            list1->next = temp;\n            list1 = list1->next;\n        }\n        if (list2 != NULL) {\n            list1->next = list2;\n        }\n        return head;\n    }\n};\n")))))}f.isMDXComponent=!0}}]);