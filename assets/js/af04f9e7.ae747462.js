"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[2247],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),m=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=m(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=m(t),d=r,h=u["".concat(s,".").concat(d)]||u[d]||p[d]||i;return t?a.createElement(h,o(o({ref:n},c),{},{components:t})):a.createElement(h,o({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var m=2;m<i;m++)o[m]=t[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(7294),r=t(4334);const i="tabItem_Ymn6";function o(e){let{children:n,hidden:t,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>d});var a=t(3117),r=t(7294),i=t(4334),o=t(2389),l=t(7392),s=t(7094),m=t(2466);const c="tabList__CuJ",p="tabItem_LNqP";function u(e){var n,t;const{lazy:o,block:u,defaultValue:d,values:h,groupId:b,className:g}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=h?h:f.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),v=(0,l.l)(k,((e,n)=>e.value===n.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===d?d:null!=(n=null!=d?d:null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)?n:f[0].props.value;if(null!==y&&!k.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+k.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:w,setTabGroupChoices:N}=(0,s.U)(),[O,P]=(0,r.useState)(y),T=[],{blockElementScrollPositionUntilNextRender:x}=(0,m.o5)();if(null!=b){const e=w[b];null!=e&&e!==O&&k.some((n=>n.value===e))&&P(e)}const E=e=>{const n=e.currentTarget,t=T.indexOf(n),a=k[t].value;a!==O&&(x(n),P(a),null!=b&&N(b,String(a)))},C=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{var a;const n=T.indexOf(e.currentTarget)+1;t=null!=(a=T[n])?a:T[0];break}case"ArrowLeft":{var r;const n=T.indexOf(e.currentTarget)-1;t=null!=(r=T[n])?r:T[T.length-1];break}}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":u},g)},k.map((e=>{let{value:n,label:t,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:O===n?0:-1,"aria-selected":O===n,key:n,ref:e=>T.push(e),onKeyDown:C,onFocus:E,onClick:E},o,{className:(0,i.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":O===n})}),null!=t?t:n)}))),o?(0,r.cloneElement)(f.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==O})))))}function d(e){const n=(0,o.Z)();return r.createElement(u,(0,a.Z)({key:String(n)},e))}},6182:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>m,toc:()=>p});var a=t(3117),r=(t(7294),t(3905)),i=t(5488),o=t(5162);const l={sidebar_position:2,tags:["Two Pointer","String","String Matching"]},s="Minimum Characters required to make a String Palindromic",m={unversionedId:"codes/minimum-characters-required-to-make-a-string-palindromic",id:"codes/minimum-characters-required-to-make-a-string-palindromic",title:"Minimum Characters required to make a String Palindromic",description:"Problem",source:"@site/docs/codes/minimum-characters-required-to-make-a-string-palindromic.md",sourceDirName:"codes",slug:"/codes/minimum-characters-required-to-make-a-string-palindromic",permalink:"/CodePrime/docs/codes/minimum-characters-required-to-make-a-string-palindromic",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/codes/minimum-characters-required-to-make-a-string-palindromic.md",tags:[{label:"Two Pointer",permalink:"/CodePrime/docs/tags/two-pointer"},{label:"String",permalink:"/CodePrime/docs/tags/string"},{label:"String Matching",permalink:"/CodePrime/docs/tags/string-matching"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,tags:["Two Pointer","String","String Matching"]},sidebar:"Leetcode",previous:{title:"Valid Anagram",permalink:"/CodePrime/docs/codes/valid-anagram"},next:{title:"Implement strStr()",permalink:"/CodePrime/docs/codes/implement-strstr"}},c={},p=[{value:"Problem",id:"problem",level:2},{value:"Solution Approach",id:"solution-approach",level:2}],u={toc:p};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"minimum-characters-required-to-make-a-string-palindromic"},"Minimum Characters required to make a String Palindromic"),(0,r.kt)("h2",{id:"problem"},(0,r.kt)("a",{parentName:"h2",href:"https://www.interviewbit.com/problems/minimum-characters-required-to-make-a-string-palindromic/"},"Problem")),(0,r.kt)("p",null,"Given an string A. The only operation allowed is to insert  characters in the beginning of the string."),(0,r.kt)("p",null,"Find how many minimum characters are needed to be inserted to make the string a palindrome string."),(0,r.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,r.kt)("p",null,"Expected Time complexity: ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click - to see solution code"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"const int mod = 1e9 + 7;\nconst int p = 31;\n#define ll long long\n\nll powr(ll a, ll b) {\n    ll ans = 1;\n    while (b) {\n        if (b & 1ll) {\n            ans *= a;\n            ans %= mod;\n        }\n        a *= a;\n        b >>= 1ll;\n        a %= mod;\n    }\n    return ans;\n}\n\nll inv(ll a) { return powr(a, mod - 2); }\n\nint Solution::solve(string A) {\n    string s = A;\n    reverse(s.begin(), s.end());\n    int n = A.length();\n    ll dp[n];\n    dp[0] = A[0] - 'a' + 1;\n    for (int i = 1; i < n; i++) {\n        dp[i] = (dp[i - 1] + (powr(p, i) * (A[i] - 'a' + 1)) % mod) % mod;\n    }\n    ll kmp = 0;\n    for (int i = 0; i < n; i++) {\n        kmp += powr(p, i) * (s[i] - 'a' + 1);\n        kmp %= mod;\n    }\n    if (kmp == dp[n - 1]) {\n        return 0;\n    }\n    for (int i = 0; i < n; i++) {\n        kmp -= (s[i] - 'a' + 1);\n        kmp *= inv(p);\n        kmp %= mod;\n        kmp += mod;\n        kmp %= mod;\n        if (kmp == dp[n - i - 2]) {\n            return i + 1;\n        }\n    }\n}\n\n"))))))}d.isMDXComponent=!0}}]);