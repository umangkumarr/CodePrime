"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[4902],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(r),d=a,b=m["".concat(i,".").concat(d)]||m[d]||p[d]||l;return r?n.createElement(b,o(o({ref:t},c),{},{components:r})):n.createElement(b,o({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<l;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(7294),a=r(4334);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(l,o),hidden:r},t)}},5488:(e,t,r)=>{r.d(t,{Z:()=>d});var n=r(3117),a=r(7294),l=r(4334),o=r(2389),s=r(7392),i=r(7094),u=r(2466);const c="tabList__CuJ",p="tabItem_LNqP";function m(e){var t,r;const{lazy:o,block:m,defaultValue:d,values:b,groupId:f,className:v}=e,k=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=b?b:k.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),g=(0,s.l)(y,((e,t)=>e.value===t.value));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const h=null===d?d:null!=(t=null!=d?d:null==(r=k.find((e=>e.props.default)))?void 0:r.props.value)?t:k[0].props.value;if(null!==h&&!y.some((e=>e.value===h)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+y.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:w,setTabGroupChoices:j}=(0,i.U)(),[O,P]=(0,a.useState)(h),T=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=f){const e=w[f];null!=e&&e!==O&&y.some((t=>t.value===e))&&P(e)}const C=e=>{const t=e.currentTarget,r=T.indexOf(t),n=y[r].value;n!==O&&(E(t),P(n),null!=f&&j(f,String(n)))},S=e=>{var t;let r=null;switch(e.key){case"ArrowRight":{var n;const t=T.indexOf(e.currentTarget)+1;r=null!=(n=T[t])?n:T[0];break}case"ArrowLeft":{var a;const t=T.indexOf(e.currentTarget)-1;r=null!=(a=T[t])?a:T[T.length-1];break}}null==(t=r)||t.focus()};return a.createElement("div",{className:(0,l.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":m},v)},y.map((e=>{let{value:t,label:r,attributes:o}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:e=>T.push(e),onKeyDown:S,onFocus:C,onClick:C},o,{className:(0,l.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":O===t})}),null!=r?r:t)}))),o?(0,a.cloneElement)(k.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==O})))))}function d(e){const t=(0,o.Z)();return a.createElement(m,(0,n.Z)({key:String(t)},e))}},5331:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var n=r(3117),a=(r(7294),r(3905)),l=r(5488),o=r(5162);const s={sidebar_position:19,tags:["Array","Two Pointers","Sorting"]},i="4Sum",u={unversionedId:"codes/4sum",id:"codes/4sum",title:"4Sum",description:"Problem",source:"@site/docs/codes/4sum.md",sourceDirName:"codes",slug:"/codes/4sum",permalink:"/CodePrime/docs/codes/4sum",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/codes/4sum.md",tags:[{label:"Array",permalink:"/CodePrime/docs/tags/array"},{label:"Two Pointers",permalink:"/CodePrime/docs/tags/two-pointers"},{label:"Sorting",permalink:"/CodePrime/docs/tags/sorting"}],version:"current",sidebarPosition:19,frontMatter:{sidebar_position:19,tags:["Array","Two Pointers","Sorting"]},sidebar:"Leetcode",previous:{title:"Arrays Part-IV",permalink:"/CodePrime/docs/category/arrays-part-iv"},next:{title:"Longest Consecutive Sequence",permalink:"/CodePrime/docs/codes/longest-consecutive-sequence"}},c={},p=[{value:"Problem",id:"problem",level:2},{value:"Solution Approach",id:"solution-approach",level:2}],m={toc:p};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"4sum"},"4Sum"),(0,a.kt)("h2",{id:"problem"},(0,a.kt)("a",{parentName:"h2",href:"https://leetcode.com/problems/4sum/"},"Problem")),(0,a.kt)("p",null,"Given an array ",(0,a.kt)("code",null,"nums")," of ",(0,a.kt)("code",null,"n")," integers, return ",(0,a.kt)("em",null,"an array of all the ",(0,a.kt)("strong",null,"unique")," quadruplets")," ",(0,a.kt)("code",null,"[nums[a], nums[b], nums[c], nums[d]]")," such that:"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"0 <= a, b, c, d\xa0< n")),(0,a.kt)("li",null,(0,a.kt)("code",null,"a"),", ",(0,a.kt)("code",null,"b"),", ",(0,a.kt)("code",null,"c"),", and ",(0,a.kt)("code",null,"d")," are ",(0,a.kt)("strong",null,"distinct"),"."),(0,a.kt)("li",null,(0,a.kt)("code",null,"nums[a] + nums[b] + nums[c] + nums[d] == target"))),(0,a.kt)("p",null,"You may return the answer in ",(0,a.kt)("strong",null,"any order"),"."),(0,a.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Click - to see solution code"),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#define ll long long\nclass Solution {\n   public:\n    vector<vector<int>> fourSum(vector<int>& arr, int target) {\n        int n = arr.size();\n        unordered_map<ll, ll> mp;\n        set<vector<int>> ans;\n        vector<int> a;\n\n        for (int i = 0; i < n; i++) mp[arr[i]]++;\n        for (int i = 0; i < n; i++) {\n            mp[arr[i]]--;\n            for (int j = i + 1; j < n; j++) {\n                mp[arr[j]]--;\n                for (int k = j + 1; k < n; k++) {\n                    mp[arr[k]]--;\n                    ll sm = (ll)arr[i] + (ll)arr[k] + (ll)arr[j];\n                    if (mp[target - sm]) {\n                        a = {arr[i], arr[j], arr[k], int(target - sm)};\n                        sort(a.begin(), a.end());\n                        ans.insert(a);\n                    }\n                }\n                for (int k = j + 1; k < n; k++) mp[arr[k]]++;\n            }\n            for (int j = i + 1; j < n; j++) mp[arr[j]]++;\n        }\n        vector<vector<int>> res;\n        for (auto i : ans) res.push_back(i);\n        return res;\n    }\n};\n\n"))))))}d.isMDXComponent=!0}}]);