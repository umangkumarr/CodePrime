"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[1887],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,h=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294);const r=function(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},9877:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(7462),r=n(7294),o=n(2389),l=n(5773),s=n(6010);const i="tabItem_LplD";function c(e){var t,n,o;const{lazy:c,block:p,defaultValue:u,values:d,groupId:m,className:h}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=d?d:b.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),k=(0,l.lx)(f,((e,t)=>e.value===t.value));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const v=null===u?u:null!=(t=null!=u?u:null==(n=b.find((e=>e.props.default)))?void 0:n.props.value)?t:null==(o=b[0])?void 0:o.props.value;if(null!==v&&!f.some((e=>e.value===v)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:g,setTabGroupChoices:y}=(0,l.UB)(),[N,w]=(0,r.useState)(v),O=[],{blockElementScrollPositionUntilNextRender:T}=(0,l.o5)();if(null!=m){const e=g[m];null!=e&&e!==N&&f.some((t=>t.value===e))&&w(e)}const x=e=>{const t=e.currentTarget,n=O.indexOf(t),a=f[n].value;a!==N&&(T(t),w(a),null!=m&&y(m,a))},E=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=O.indexOf(e.currentTarget)+1;n=O[t]||O[0];break}case"ArrowLeft":{const t=O.indexOf(e.currentTarget)-1;n=O[t]||O[O.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":p},h)},f.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>O.push(e),onKeyDown:E,onFocus:x,onClick:x},o,{className:(0,s.Z)("tabs__item",i,null==o?void 0:o.className,{"tabs__item--active":N===t})}),null!=n?n:t)}))),c?(0,r.cloneElement)(b.filter((e=>e.props.value===N))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},b.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function p(e){const t=(0,o.Z)();return r.createElement(c,(0,a.Z)({key:String(t)},e))}},5461:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>s,contentTitle:()=>i,metadata:()=>c,toc:()=>p,default:()=>d});var a=n(7462),r=(n(7294),n(3905)),o=n(9877),l=n(8215);const s={displayed_sidebar:null,sidebar_position:154,tags:["Hash Table","Depth-First Search","Breadth-First Search","Graph"]},i="Clone Graph",c={unversionedId:"codes/clone-graph",id:"codes/clone-graph",title:"Clone Graph",description:"Problem",source:"@site/docs/codes/clone-graph.md",sourceDirName:"codes",slug:"/codes/clone-graph",permalink:"/docs/codes/clone-graph",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/codes/clone-graph.md",tags:[{label:"Hash Table",permalink:"/docs/tags/hash-table"},{label:"Depth-First Search",permalink:"/docs/tags/depth-first-search"},{label:"Breadth-First Search",permalink:"/docs/tags/breadth-first-search"},{label:"Graph",permalink:"/docs/tags/graph"}],version:"current",sidebarPosition:154,frontMatter:{displayed_sidebar:null,sidebar_position:154,tags:["Hash Table","Depth-First Search","Breadth-First Search","Graph"]}},p=[{value:"Problem",id:"problem",children:[],level:2},{value:"Solution Approach",id:"solution-approach",children:[],level:2}],u={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"clone-graph"},"Clone Graph"),(0,r.kt)("h2",{id:"problem"},(0,r.kt)("a",{parentName:"h2",href:"https://leetcode.com/problems/clone-graph/"},"Problem")),(0,r.kt)("p",null,"Given a reference of a node in a ",(0,r.kt)("strong",null,(0,r.kt)("a",{href:"https://en.wikipedia.org/wiki/Connectivity_(graph_theory)#Connected_graph",target:"_blank"},"connected"))," undirected graph."),(0,r.kt)("p",null,"Return a ",(0,r.kt)("a",{href:"https://en.wikipedia.org/wiki/Object_copying#Deep_copy",target:"_blank"},(0,r.kt)("strong",null,"deep copy"))," (clone) of the graph."),(0,r.kt)("p",null,"Each node in the graph contains a value (",(0,r.kt)("code",null,"int"),") and a list (",(0,r.kt)("code",null,"List[Node]"),") of its neighbors."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"class Node {\n    public int val;\n    public List&lt;Node&gt; neighbors;\n}\n")),(0,r.kt)("p",null,"\xa0"),(0,r.kt)("p",null,(0,r.kt)("strong",null,"Test case format:")),(0,r.kt)("p",null,"For simplicity, each node's value is the same as the node's index (1-indexed). For example, the first node with ",(0,r.kt)("code",null,"val == 1"),", the second node with ",(0,r.kt)("code",null,"val == 2"),", and so on. The graph is represented in the test case using an adjacency list."),(0,r.kt)("p",null,(0,r.kt)("b",null,"An adjacency list")," is a collection of unordered ",(0,r.kt)("b",null,"lists")," used to represent a finite graph. Each list describes the set of neighbors of a node in the graph."),(0,r.kt)("p",null,"The given node will always be the first node with ",(0,r.kt)("code",null,"val = 1"),". You must return the ",(0,r.kt)("strong",null,"copy of the given node")," as a reference to the cloned graph."),(0,r.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,r.kt)("p",null,"Expected Time complexity: ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click - to see solution code"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n   public:\n    map<Node*, Node*> nodes;\n    map<Node*, int> vis;\n\n    void traverse(Node* root) {\n        if (vis.find(root) != vis.end()) return;\n        vis[root] = 1;\n        Node* newNode = new Node(root->val);\n        nodes[root] = newNode;\n        for (auto nbr : root->neighbors) {\n            traverse(nbr);\n        }\n    }\n\n    Node* cloneGraph(Node* node) {\n        if (!node) return NULL;\n        traverse(node);\n        for (auto nde : nodes) {\n            for (auto nbr : nde.first->neighbors) {\n                nde.second->neighbors.push_back(nodes[nbr]);\n            }\n        }\n        return nodes[node];\n    }\n};\n\n"))))))}d.isMDXComponent=!0}}]);