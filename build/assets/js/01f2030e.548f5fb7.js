"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[3882],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(r),m=l,v=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return r?n.createElement(v,o(o({ref:t},c),{},{components:r})):n.createElement(v,o({ref:t},c))}));function m(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(7294),l=r(4334);const a="tabItem_Ymn6";function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(a,o),hidden:r},t)}},5488:(e,t,r)=>{r.d(t,{Z:()=>m});var n=r(3117),l=r(7294),a=r(4334),o=r(2389),i=r(7392),s=r(7094),u=r(2466);const c="tabList__CuJ",d="tabItem_LNqP";function p(e){var t,r;const{lazy:o,block:p,defaultValue:m,values:v,groupId:b,className:f}=e,h=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=v?v:h.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),y=(0,i.l)(k,((e,t)=>e.value===t.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const g=null===m?m:null!=(t=null!=m?m:null==(r=h.find((e=>e.props.default)))?void 0:r.props.value)?t:h[0].props.value;if(null!==g&&!k.some((e=>e.value===g)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+k.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:L,setTabGroupChoices:O}=(0,s.U)(),[N,w]=(0,l.useState)(g),x=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=b){const e=L[b];null!=e&&e!==N&&k.some((t=>t.value===e))&&w(e)}const P=e=>{const t=e.currentTarget,r=x.indexOf(t),n=k[r].value;n!==N&&(E(t),w(n),null!=b&&O(b,String(n)))},T=e=>{var t;let r=null;switch(e.key){case"ArrowRight":{var n;const t=x.indexOf(e.currentTarget)+1;r=null!=(n=x[t])?n:x[0];break}case"ArrowLeft":{var l;const t=x.indexOf(e.currentTarget)-1;r=null!=(l=x[t])?l:x[x.length-1];break}}null==(t=r)||t.focus()};return l.createElement("div",{className:(0,a.Z)("tabs-container",c)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":p},f)},k.map((e=>{let{value:t,label:r,attributes:o}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>x.push(e),onKeyDown:T,onFocus:P,onClick:P},o,{className:(0,a.Z)("tabs__item",d,null==o?void 0:o.className,{"tabs__item--active":N===t})}),null!=r?r:t)}))),o?(0,l.cloneElement)(h.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,o.Z)();return l.createElement(p,(0,n.Z)({key:String(t)},e))}},2185:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var n=r(3117),l=(r(7294),r(3905)),a=r(5488),o=r(5162);const i={sidebar_position:27,tags:["Linked List","Recursion"]},s="Reverse Linked List",u={unversionedId:"codes/reverse-linked-list",id:"codes/reverse-linked-list",title:"Reverse Linked List",description:"Problem",source:"@site/docs/codes/reverse-linked-list.md",sourceDirName:"codes",slug:"/codes/reverse-linked-list",permalink:"/CodePrime/docs/codes/reverse-linked-list",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/codes/reverse-linked-list.md",tags:[{label:"Linked List",permalink:"/CodePrime/docs/tags/linked-list"},{label:"Recursion",permalink:"/CodePrime/docs/tags/recursion"}],version:"current",sidebarPosition:27,frontMatter:{sidebar_position:27,tags:["Linked List","Recursion"]},sidebar:"Leetcode",previous:{title:"Delete Node in a Linked List",permalink:"/CodePrime/docs/codes/delete-node-in-a-linked-list"},next:{title:"Middle of the Linked List",permalink:"/CodePrime/docs/codes/middle-of-the-linked-list"}},c={},d=[{value:"Problem",id:"problem",level:2},{value:"Solution Approach",id:"solution-approach",level:2}],p={toc:d};function m(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"reverse-linked-list"},"Reverse Linked List"),(0,l.kt)("h2",{id:"problem"},(0,l.kt)("a",{parentName:"h2",href:"https://leetcode.com/problems/reverse-linked-list/"},"Problem")),(0,l.kt)("p",null,"Given the ",(0,l.kt)("code",null,"head")," of a singly linked list, reverse the list, and return ",(0,l.kt)("em",null,"the reversed list"),"."),(0,l.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Click - to see solution code"),(0,l.kt)(a.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n    ListNode* root;\n\n   public:\n    void reverse(ListNode* temp) {\n        if (temp->next->next == NULL) {\n            temp->next->next = temp;\n            root = temp->next;\n            return;\n        } else\n            reverse(temp->next);\n        temp->next->next = temp;\n    }\n\n    ListNode* reverseList(ListNode* head) {\n        if (head == NULL) return NULL;\n        if (head->next == NULL) return head;\n        ListNode* temp = head;\n        reverse(temp);\n        head->next = NULL;\n        return root;\n    }\n};\n\n"))))))}m.isMDXComponent=!0}}]);