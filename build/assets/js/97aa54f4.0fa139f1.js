"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[3264],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),d=r,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return t?a.createElement(f,o(o({ref:n},p),{},{components:t})):a.createElement(f,o({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8215:function(e,n,t){var a=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:t,className:r},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return p}});var a=t(7462),r=t(7294),i=t(2389),o=t(9548),s=t(6010),l="tabItem_LplD";function c(e){var n,t,i,c=e.lazy,p=e.block,m=e.defaultValue,u=e.values,d=e.groupId,f=e.className,b=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=u?u:b.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),v=(0,o.lx)(h,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===m?m:null!=(n=null!=m?m:null==(t=b.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(i=b[0])?void 0:i.props.value;if(null!==k&&!h.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,o.UB)(),g=y.tabGroupChoices,N=y.setTabGroupChoices,j=(0,r.useState)(k),S=j[0],w=j[1],P=[],E=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var D=g[d];null!=D&&D!==S&&h.some((function(e){return e.value===D}))&&w(D)}var O=function(e){var n=e.currentTarget,t=P.indexOf(n),a=h[t].value;a!==S&&(E(n),w(a),null!=d&&N(d,a))},z=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=P.indexOf(e.currentTarget)+1;t=P[a]||P[0];break;case"ArrowLeft":var r=P.indexOf(e.currentTarget)-1;t=P[r]||P[P.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":p},f)},h.map((function(e){var n=e.value,t=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:S===n?0:-1,"aria-selected":S===n,key:n,ref:function(e){return P.push(e)},onKeyDown:z,onFocus:O,onClick:O},i,{className:(0,s.Z)("tabs__item",l,null==i?void 0:i.className,{"tabs__item--active":S===n})}),null!=t?t:n)}))),c?(0,r.cloneElement)(b.filter((function(e){return e.props.value===S}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},b.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==S})}))))}function p(e){var n=(0,i.Z)();return r.createElement(c,(0,a.Z)({key:String(n)},e))}},8274:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return u},default:function(){return f}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),o=t(9877),s=t(8215),l=["components"],c={sidebar_position:5,tags:["Array","Backtracking"]},p="Rat in a Maze Problem I",m={unversionedId:"StriverSDESheet/Day10/Rat in a Maze ProblemI",id:"StriverSDESheet/Day10/Rat in a Maze ProblemI",title:"Rat in a Maze Problem I",description:"Problem Link",source:"@site/docs/StriverSDESheet/Day10/Rat in a Maze ProblemI.md",sourceDirName:"StriverSDESheet/Day10",slug:"/StriverSDESheet/Day10/Rat in a Maze ProblemI",permalink:"/CodePrime/docs/StriverSDESheet/Day10/Rat in a Maze ProblemI",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/StriverSDESheet/Day10/Rat in a Maze ProblemI.md",tags:[{label:"Array",permalink:"/CodePrime/docs/tags/array"},{label:"Backtracking",permalink:"/CodePrime/docs/tags/backtracking"}],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,tags:["Array","Backtracking"]},sidebar:"tutorialSidebar",previous:{title:"M-Coloring Problem",permalink:"/CodePrime/docs/StriverSDESheet/Day10/MColoring Problem"},next:{title:"Word Break",permalink:"/CodePrime/docs/StriverSDESheet/Day10/Word Break"}},u=[{value:"Problem Link",id:"problem-link",children:[],level:2},{value:"Solution Approach",id:"solution-approach",children:[],level:2}],d={toc:u};function f(e){var n=e.components,t=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"rat-in-a-maze-problem-i"},"Rat in a Maze Problem I"),(0,i.kt)("h2",{id:"problem-link"},"Problem Link"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1"},"https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1")),(0,i.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,i.kt)("p",null,"Use Backtracking and find all the possible ways of reaching the cell ","[N, N]",";"),(0,i.kt)("p",null,"Expected Time complexity: ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"O"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("msup",{parentName:"mrow"},(0,i.kt)("mn",{parentName:"msup"},"3"),(0,i.kt)("mi",{parentName:"msup"},"n")),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(3^n)")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"},"3"),(0,i.kt)("span",{parentName:"span",className:"msupsub"},(0,i.kt)("span",{parentName:"span",className:"vlist-t"},(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.6644em"}},(0,i.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,i.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"n")))))))),(0,i.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Click - to see solution code"),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n    vector<vector<int>> maze;\n    vector<string> ans;\n    string s;\n    int n;\n\n   public:\n    void compute(int i, int j) {\n        if (i == n - 1 && j == n - 1) {\n            ans.push_back(s);\n            return;\n        }\n\n        if (i > 0 && maze[i - 1][j]) {\n            maze[i][j] = 0;\n            s.push_back('U');\n            compute(i - 1, j);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n\n        if (j > 0 && maze[i][j - 1]) {\n            maze[i][j] = 0;\n            s.push_back('L');\n            compute(i, j - 1);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n\n        if (i < n - 1 && maze[i + 1][j]) {\n            maze[i][j] = 0;\n            s.push_back('D');\n            compute(i + 1, j);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n\n        if (j < n - 1 && maze[i][j + 1]) {\n            maze[i][j] = 0;\n            s.push_back('R');\n            compute(i, j + 1);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n    }\n\n    vector<string> findPath(vector<vector<int>> &m, int n) {\n        this->n = n;\n        this->maze = m;\n        s = \"\";\n        this->n = n;\n        if (maze[0][0]) compute(0, 0);\n        return ans;\n    }\n};\n"))))))}f.isMDXComponent=!0}}]);