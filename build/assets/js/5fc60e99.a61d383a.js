"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[1170],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(r),d=a,b=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return r?n.createElement(b,l(l({ref:t},c),{},{components:r})):n.createElement(b,l({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.d(t,{Z:()=>l});var n=r(7294),a=r(4334);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:r,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:r},t)}},5488:(e,t,r)=>{r.d(t,{Z:()=>d});var n=r(3117),a=r(7294),o=r(4334),l=r(2389),i=r(7392),s=r(7094),u=r(2466);const c="tabList__CuJ",m="tabItem_LNqP";function p(e){var t,r;const{lazy:l,block:p,defaultValue:d,values:b,groupId:y,className:f}=e,v=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=b?b:v.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),g=(0,i.l)(h,((e,t)=>e.value===t.value));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===d?d:null!=(t=null!=d?d:null==(r=v.find((e=>e.props.default)))?void 0:r.props.value)?t:v[0].props.value;if(null!==k&&!h.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:j,setTabGroupChoices:O}=(0,s.U)(),[P,w]=(0,a.useState)(k),C=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=y){const e=j[y];null!=e&&e!==P&&h.some((t=>t.value===e))&&w(e)}const T=e=>{const t=e.currentTarget,r=C.indexOf(t),n=h[r].value;n!==P&&(E(t),w(n),null!=y&&O(y,String(n)))},x=e=>{var t;let r=null;switch(e.key){case"ArrowRight":{var n;const t=C.indexOf(e.currentTarget)+1;r=null!=(n=C[t])?n:C[0];break}case"ArrowLeft":{var a;const t=C.indexOf(e.currentTarget)-1;r=null!=(a=C[t])?a:C[C.length-1];break}}null==(t=r)||t.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":p},f)},h.map((e=>{let{value:t,label:r,attributes:l}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:P===t?0:-1,"aria-selected":P===t,key:t,ref:e=>C.push(e),onKeyDown:x,onFocus:T,onClick:T},l,{className:(0,o.Z)("tabs__item",m,null==l?void 0:l.className,{"tabs__item--active":P===t})}),null!=r?r:t)}))),l?(0,a.cloneElement)(v.filter((e=>e.props.value===P))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==P})))))}function d(e){const t=(0,l.Z)();return a.createElement(p,(0,n.Z)({key:String(t)},e))}},5827:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>u,toc:()=>m});var n=r(3117),a=(r(7294),r(3905)),o=r(5488),l=r(5162);const i={sidebar_position:18,tags:["Array","Hash Table","Divide and Conquer","Sorting","Counting"]},s="Majority Element",u={unversionedId:"codes/majority-element",id:"codes/majority-element",title:"Majority Element",description:"Problem",source:"@site/docs/codes/majority-element.md",sourceDirName:"codes",slug:"/codes/majority-element",permalink:"/CodePrime/docs/codes/majority-element",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/codes/majority-element.md",tags:[{label:"Array",permalink:"/CodePrime/docs/tags/array"},{label:"Hash Table",permalink:"/CodePrime/docs/tags/hash-table"},{label:"Divide and Conquer",permalink:"/CodePrime/docs/tags/divide-and-conquer"},{label:"Sorting",permalink:"/CodePrime/docs/tags/sorting"},{label:"Counting",permalink:"/CodePrime/docs/tags/counting"}],version:"current",sidebarPosition:18,frontMatter:{sidebar_position:18,tags:["Array","Hash Table","Divide and Conquer","Sorting","Counting"]},sidebar:"Leetcode",previous:{title:"Unique Paths",permalink:"/CodePrime/docs/codes/unique-paths"},next:{title:"Arrays Part-IV",permalink:"/CodePrime/docs/category/arrays-part-iv"}},c={},m=[{value:"Problem",id:"problem",level:2},{value:"Solution Approach",id:"solution-approach",level:2}],p={toc:m};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"majority-element"},"Majority Element"),(0,a.kt)("h2",{id:"problem"},(0,a.kt)("a",{parentName:"h2",href:"https://leetcode.com/problems/majority-element/"},"Problem")),(0,a.kt)("p",null,"Given an array ",(0,a.kt)("code",null,"nums")," of size ",(0,a.kt)("code",null,"n"),", return ",(0,a.kt)("em",null,"the majority element"),"."),(0,a.kt)("p",null,"The majority element is the element that appears more than ",(0,a.kt)("code",null,"\u230an / 2\u230b")," times. You may assume that the majority element always exists in the array."),(0,a.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Click - to see solution code"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n   public:\n    int majorityElement(vector<int>& nums) {\n        int n = nums.size();\n        sort(nums.begin(), nums.end());\n        return nums[n / 2];\n    }\n};\n\n"))))))}d.isMDXComponent=!0}}]);