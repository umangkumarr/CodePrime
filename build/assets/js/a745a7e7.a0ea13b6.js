"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[9898],{3905:function(e,n,a){a.d(n,{Zo:function(){return c},kt:function(){return d}});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),m=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},c=function(e){var n=m(e.components);return t.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=m(a),d=r,b=u["".concat(l,".").concat(d)]||u[d]||p[d]||o;return a?t.createElement(b,i(i({ref:n},c),{},{components:a})):t.createElement(b,i({ref:n},c))}));function d(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var m=2;m<o;m++)i[m]=a[m];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8215:function(e,n,a){var t=a(7294);n.Z=function(e){var n=e.children,a=e.hidden,r=e.className;return t.createElement("div",{role:"tabpanel",hidden:a,className:r},n)}},9877:function(e,n,a){a.d(n,{Z:function(){return c}});var t=a(7462),r=a(7294),o=a(2389),i=a(9548),s=a(6010),l="tabItem_LplD";function m(e){var n,a,o,m=e.lazy,c=e.block,p=e.defaultValue,u=e.values,d=e.groupId,b=e.className,f=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=u?u:f.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),v=(0,i.lx)(h,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===p?p:null!=(n=null!=p?p:null==(a=f.find((function(e){return e.props.default})))?void 0:a.props.value)?n:null==(o=f[0])?void 0:o.props.value;if(null!==k&&!h.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,i.UB)(),g=y.tabGroupChoices,N=y.setTabGroupChoices,P=(0,r.useState)(k),j=P[0],w=P[1],S=[],E=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var D=g[d];null!=D&&D!==j&&h.some((function(e){return e.value===D}))&&w(D)}var O=function(e){var n=e.currentTarget,a=S.indexOf(n),t=h[a].value;t!==j&&(E(n),w(t),null!=d&&N(d,t))},z=function(e){var n,a=null;switch(e.key){case"ArrowRight":var t=S.indexOf(e.currentTarget)+1;a=S[t]||S[0];break;case"ArrowLeft":var r=S.indexOf(e.currentTarget)-1;a=S[r]||S[S.length-1]}null==(n=a)||n.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":c},b)},h.map((function(e){var n=e.value,a=e.label,o=e.attributes;return r.createElement("li",(0,t.Z)({role:"tab",tabIndex:j===n?0:-1,"aria-selected":j===n,key:n,ref:function(e){return S.push(e)},onKeyDown:z,onFocus:O,onClick:O},o,{className:(0,s.Z)("tabs__item",l,null==o?void 0:o.className,{"tabs__item--active":j===n})}),null!=a?a:n)}))),m?(0,r.cloneElement)(f.filter((function(e){return e.props.value===j}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==j})}))))}function c(e){var n=(0,o.Z)();return r.createElement(m,(0,t.Z)({key:String(n)},e))}},8797:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return m},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return b}});var t=a(7462),r=a(3366),o=(a(7294),a(3905)),i=a(9877),s=a(8215),l=["components"],m={sidebar_position:5,tags:["Array","Backtracking"]},c="Rat in a Maze Problem I",p={unversionedId:"Problems/StriverSDESheet/Day10/Rat in a Maze ProblemI",id:"Problems/StriverSDESheet/Day10/Rat in a Maze ProblemI",title:"Rat in a Maze Problem I",description:"Problem Link",source:"@site/docs/Problems/StriverSDESheet/Day10/Rat in a Maze ProblemI.md",sourceDirName:"Problems/StriverSDESheet/Day10",slug:"/Problems/StriverSDESheet/Day10/Rat in a Maze ProblemI",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day10/Rat in a Maze ProblemI",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Problems/StriverSDESheet/Day10/Rat in a Maze ProblemI.md",tags:[{label:"Array",permalink:"/CodePrime/docs/tags/array"},{label:"Backtracking",permalink:"/CodePrime/docs/tags/backtracking"}],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,tags:["Array","Backtracking"]},sidebar:"api",previous:{title:"M-Coloring Problem",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day10/MColoring Problem"},next:{title:"Word Break",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day10/Word Break"}},u=[{value:"Problem Link",id:"problem-link",children:[],level:2},{value:"Solution Approach",id:"solution-approach",children:[],level:2}],d={toc:u};function b(e){var n=e.components,a=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,t.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"rat-in-a-maze-problem-i"},"Rat in a Maze Problem I"),(0,o.kt)("h2",{id:"problem-link"},"Problem Link"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1"},"https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1")),(0,o.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,o.kt)("p",null,"Use Backtracking and find all the possible ways of reaching the cell ","[N, N]",";"),(0,o.kt)("p",null,"Expected Time complexity: ",(0,o.kt)("span",{parentName:"p",className:"math math-inline"},(0,o.kt)("span",{parentName:"span",className:"katex"},(0,o.kt)("span",{parentName:"span",className:"katex-mathml"},(0,o.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,o.kt)("semantics",{parentName:"math"},(0,o.kt)("mrow",{parentName:"semantics"},(0,o.kt)("mi",{parentName:"mrow"},"O"),(0,o.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,o.kt)("msup",{parentName:"mrow"},(0,o.kt)("mn",{parentName:"msup"},"3"),(0,o.kt)("mi",{parentName:"msup"},"n")),(0,o.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,o.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(3^n)")))),(0,o.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,o.kt)("span",{parentName:"span",className:"base"},(0,o.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,o.kt)("span",{parentName:"span",className:"mopen"},"("),(0,o.kt)("span",{parentName:"span",className:"mord"},(0,o.kt)("span",{parentName:"span",className:"mord"},"3"),(0,o.kt)("span",{parentName:"span",className:"msupsub"},(0,o.kt)("span",{parentName:"span",className:"vlist-t"},(0,o.kt)("span",{parentName:"span",className:"vlist-r"},(0,o.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.6644em"}},(0,o.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,o.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,o.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,o.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"n")))))))),(0,o.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Click - to see solution code"),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n    vector<vector<int>> maze;\n    vector<string> ans;\n    string s;\n    int n;\n\n   public:\n    void compute(int i, int j) {\n        if (i == n - 1 && j == n - 1) {\n            ans.push_back(s);\n            return;\n        }\n\n        if (i > 0 && maze[i - 1][j]) {\n            maze[i][j] = 0;\n            s.push_back('U');\n            compute(i - 1, j);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n\n        if (j > 0 && maze[i][j - 1]) {\n            maze[i][j] = 0;\n            s.push_back('L');\n            compute(i, j - 1);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n\n        if (i < n - 1 && maze[i + 1][j]) {\n            maze[i][j] = 0;\n            s.push_back('D');\n            compute(i + 1, j);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n\n        if (j < n - 1 && maze[i][j + 1]) {\n            maze[i][j] = 0;\n            s.push_back('R');\n            compute(i, j + 1);\n            s.pop_back();\n            maze[i][j] = 1;\n        }\n    }\n\n    vector<string> findPath(vector<vector<int>> &m, int n) {\n        this->n = n;\n        this->maze = m;\n        s = \"\";\n        this->n = n;\n        if (maze[0][0]) compute(0, 0);\n        return ans;\n    }\n};\n"))))))}b.isMDXComponent=!0}}]);