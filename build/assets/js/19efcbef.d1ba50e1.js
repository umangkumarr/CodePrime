"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[4187],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,h=p["".concat(i,".").concat(d)]||p[d]||m[d]||l;return n?a.createElement(h,s(s({ref:t},c),{},{components:n})):a.createElement(h,s({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=p;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var u=2;u<l;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),r=n(4334);const l="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,s),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(3117),r=n(7294),l=n(4334),s=n(2389),o=n(7392),i=n(7094),u=n(2466);const c="tabList__CuJ",m="tabItem_LNqP";function p(e){var t,n;const{lazy:s,block:p,defaultValue:d,values:h,groupId:k,className:b}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=h?h:f.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),v=(0,o.l)(g,((e,t)=>e.value===t.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===d?d:null!=(t=null!=d?d:null==(n=f.find((e=>e.props.default)))?void 0:n.props.value)?t:f[0].props.value;if(null!==y&&!g.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+g.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:x,setTabGroupChoices:N}=(0,i.U)(),[w,O]=(0,r.useState)(y),E=[],{blockElementScrollPositionUntilNextRender:T}=(0,u.o5)();if(null!=k){const e=x[k];null!=e&&e!==w&&g.some((t=>t.value===e))&&O(e)}const j=e=>{const t=e.currentTarget,n=E.indexOf(t),a=g[n].value;a!==w&&(T(t),O(a),null!=k&&N(k,String(a)))},P=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=E.indexOf(e.currentTarget)+1;n=null!=(a=E[t])?a:E[0];break}case"ArrowLeft":{var r;const t=E.indexOf(e.currentTarget)-1;n=null!=(r=E[t])?r:E[E.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":p},b)},g.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>E.push(e),onKeyDown:P,onFocus:j,onClick:j},s,{className:(0,l.Z)("tabs__item",m,null==s?void 0:s.className,{"tabs__item--active":w===t})}),null!=n?n:t)}))),s?(0,r.cloneElement)(f.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function d(e){const t=(0,s.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},909:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>u,toc:()=>m});var a=n(3117),r=(n(7294),n(3905)),l=n(5488),s=n(5162);const o={sidebar_position:74,tags:["Array","Hash Table","Stack","Monotonic Stack"]},i="Next Greater Element I",u={unversionedId:"codes/next-greater-element-i",id:"codes/next-greater-element-i",title:"Next Greater Element I",description:"Problem",source:"@site/docs/codes/next-greater-element-i.md",sourceDirName:"codes",slug:"/codes/next-greater-element-i",permalink:"/CodePrime/docs/codes/next-greater-element-i",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/codes/next-greater-element-i.md",tags:[{label:"Array",permalink:"/CodePrime/docs/tags/array"},{label:"Hash Table",permalink:"/CodePrime/docs/tags/hash-table"},{label:"Stack",permalink:"/CodePrime/docs/tags/stack"},{label:"Monotonic Stack",permalink:"/CodePrime/docs/tags/monotonic-stack"}],version:"current",sidebarPosition:74,frontMatter:{sidebar_position:74,tags:["Array","Hash Table","Stack","Monotonic Stack"]},sidebar:"Leetcode",previous:{title:"Implement a Queue using array",permalink:"/CodePrime/docs/codes/implement-a-queue-using-array"},next:{title:"Implement Stack using Queues",permalink:"/CodePrime/docs/codes/implement-stack-using-queues"}},c={},m=[{value:"Problem",id:"problem",level:2},{value:"Solution Approach",id:"solution-approach",level:2}],p={toc:m};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"next-greater-element-i"},"Next Greater Element I"),(0,r.kt)("h2",{id:"problem"},(0,r.kt)("a",{parentName:"h2",href:"https://leetcode.com/problems/next-greater-element-i/"},"Problem")),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",null,"next greater element")," of some element ",(0,r.kt)("code",null,"x")," in an array is the ",(0,r.kt)("strong",null,"first greater")," element that is ",(0,r.kt)("strong",null,"to the right")," of ",(0,r.kt)("code",null,"x")," in the same array."),(0,r.kt)("p",null,"You are given two ",(0,r.kt)("strong",null,"distinct 0-indexed")," integer arrays ",(0,r.kt)("code",null,"nums1")," and ",(0,r.kt)("code",null,"nums2"),", where ",(0,r.kt)("code",null,"nums1")," is a subset of ",(0,r.kt)("code",null,"nums2"),"."),(0,r.kt)("p",null,"For each ",(0,r.kt)("code",null,"0 <= i < nums1.length"),", find the index ",(0,r.kt)("code",null,"j")," such that ",(0,r.kt)("code",null,"nums1[i] == nums2[j]")," and determine the ",(0,r.kt)("strong",null,"next greater element")," of ",(0,r.kt)("code",null,"nums2[j]")," in ",(0,r.kt)("code",null,"nums2"),". If there is no next greater element, then the answer for this query is ",(0,r.kt)("code",null,"-1"),"."),(0,r.kt)("p",null,"Return ",(0,r.kt)("em",null,"an array "),(0,r.kt)("code",null,"ans"),(0,r.kt)("em",null," of length "),(0,r.kt)("code",null,"nums1.length"),(0,r.kt)("em",null," such that "),(0,r.kt)("code",null,"ans[i]"),(0,r.kt)("em",null," is the ",(0,r.kt)("strong",null,"next greater element")," as described above.")),(0,r.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,r.kt)("p",null,"Expected Time complexity: ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click - to see solution code"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void insert(int temp, stack<int>& st) {\n    if (st.size() == 0) {\n        st.push(temp);\n        return;\n    }\n    if (st.top() > temp) {\n        int t = st.top();\n        st.pop();\n        insert(temp, st);\n        st.push(t);\n    } else {\n        st.push(temp);\n    }\n}\nvoid sortStack(stack<int>& st) {\n    class Solution {\n       public:\n        vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n            int n = nums2.size();\n            unordered_map<int, int> mp;\n            for (int j : nums1) {\n                int indx = 0;\n                while (nums2[indx] != j) indx++;\n                while (indx < n && nums2[indx] <= j) indx++;\n                if (indx < n) mp[j] = nums2[indx];\n            }\n            vector<int> ans;\n            for (auto j : nums1)\n                ans.push_back(mp.find(j) != mp.end() ? mp[j] : -1);\n            return ans;\n        }\n    };\n    if (st.size() == 1) return;\n    int temp = st.top();\n    st.pop();\n    sortStack(st);\n    insert(temp, st);\n}\n\n"))))))}d.isMDXComponent=!0}}]);