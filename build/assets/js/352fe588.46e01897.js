"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[8715],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>u});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),p=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,d=m(e,["components","mdxType","originalType","parentName"]),c=p(r),u=n,k=c["".concat(i,".").concat(u)]||c[u]||s[u]||l;return r?a.createElement(k,o(o({ref:t},d),{},{components:r})):a.createElement(k,o({ref:t},d))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=c;var m={};for(var i in t)hasOwnProperty.call(t,i)&&(m[i]=t[i]);m.originalType=e,m.mdxType="string"==typeof e?e:n,o[1]=m;for(var p=2;p<l;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},2323:(e,t,r)=>{r.r(t),r.d(t,{frontMatter:()=>l,contentTitle:()=>o,metadata:()=>m,toc:()=>i,default:()=>d});var a=r(7462),n=(r(7294),r(3905));const l={sidebar_position:4,description:"Collection of problems asked in LinkedIn technical rounds"},o="Linkedln",m={unversionedId:"Problems/Interviews/Linkedln",id:"Problems/Interviews/Linkedln",title:"Linkedln",description:"Collection of problems asked in LinkedIn technical rounds",source:"@site/docs/Problems/Interviews/Linkedln.md",sourceDirName:"Problems/Interviews",slug:"/Problems/Interviews/Linkedln",permalink:"/CodePrime/docs/Problems/Interviews/Linkedln",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Problems/Interviews/Linkedln.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"Collection of problems asked in LinkedIn technical rounds"},sidebar:"main",previous:{title:"Google",permalink:"/CodePrime/docs/Problems/Interviews/Google"},next:{title:"Top 50 Interview questions",permalink:"/CodePrime/docs/Problems/Interviews/Top 50 Interview questions"}},i=[],p={toc:i};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"linkedln"},"Linkedln"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"S.No"),(0,n.kt)("th",{parentName:"tr",align:null},"Problem"),(0,n.kt)("th",{parentName:"tr",align:null},"Link"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"1"),(0,n.kt)("td",{parentName:"tr",align:null},"Roman to Integer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/roman-to-integer"},"https://leetcode.com/problems/roman-to-integer"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"2"),(0,n.kt)("td",{parentName:"tr",align:null},"Valid Parentheses"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/valid-parentheses"},"https://leetcode.com/problems/valid-parentheses"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"3"),(0,n.kt)("td",{parentName:"tr",align:null},"Find First and Last Position of Element in Sorted Array"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array"},"https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"4"),(0,n.kt)("td",{parentName:"tr",align:null},"Maximum Subarray"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/maximum-subarray"},"https://leetcode.com/problems/maximum-subarray"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"5"),(0,n.kt)("td",{parentName:"tr",align:null},"Merge Intervals"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/merge-intervals"},"https://leetcode.com/problems/merge-intervals"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"6"),(0,n.kt)("td",{parentName:"tr",align:null},"Symmetric Tree"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/symmetric-tree"},"https://leetcode.com/problems/symmetric-tree"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"7"),(0,n.kt)("td",{parentName:"tr",align:null},"Binary Tree Level Order Traversal"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/binary-tree-level-order-traversal"},"https://leetcode.com/problems/binary-tree-level-order-traversal"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"8"),(0,n.kt)("td",{parentName:"tr",align:null},"Word Ladder"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/word-ladder"},"https://leetcode.com/problems/word-ladder"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"9"),(0,n.kt)("td",{parentName:"tr",align:null},"Max Points on a Line"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/max-points-on-a-line"},"https://leetcode.com/problems/max-points-on-a-line"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"10"),(0,n.kt)("td",{parentName:"tr",align:null},"Evaluate Reverse Polish Notation"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/evaluate-reverse-polish-notation"},"https://leetcode.com/problems/evaluate-reverse-polish-notation"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"11"),(0,n.kt)("td",{parentName:"tr",align:null},"Maximum Product Subarray"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/maximum-product-subarray"},"https://leetcode.com/problems/maximum-product-subarray"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"12"),(0,n.kt)("td",{parentName:"tr",align:null},"Kth Largest Element in an Array"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/kth-largest-element-in-an-array"},"https://leetcode.com/problems/kth-largest-element-in-an-array"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"13"),(0,n.kt)("td",{parentName:"tr",align:null},"Shortest Word Distance"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/shortest-word-distance"},"https://leetcode.com/problems/shortest-word-distance"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"14"),(0,n.kt)("td",{parentName:"tr",align:null},"Shortest Word Distance II"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/shortest-word-distance-ii"},"https://leetcode.com/problems/shortest-word-distance-ii"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"15"),(0,n.kt)("td",{parentName:"tr",align:null},"Factor Combinations"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/factor-combinations"},"https://leetcode.com/problems/factor-combinations"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"16"),(0,n.kt)("td",{parentName:"tr",align:null},"Closest Binary Search Tree Value II"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii"},"https://leetcode.com/problems/closest-binary-search-tree-value-ii"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"17"),(0,n.kt)("td",{parentName:"tr",align:null},"Serialize and Deserialize Binary Tree"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree"},"https://leetcode.com/problems/serialize-and-deserialize-binary-tree"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"18"),(0,n.kt)("td",{parentName:"tr",align:null},"Nested List Weight Sum"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/nested-list-weight-sum"},"https://leetcode.com/problems/nested-list-weight-sum"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"19"),(0,n.kt)("td",{parentName:"tr",align:null},"Nested List Weight Sum II"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/nested-list-weight-sum-ii"},"https://leetcode.com/problems/nested-list-weight-sum-ii"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"20"),(0,n.kt)("td",{parentName:"tr",align:null},"Find Leaves of Binary Tree"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/find-leaves-of-binary-tree"},"https://leetcode.com/problems/find-leaves-of-binary-tree"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"21"),(0,n.kt)("td",{parentName:"tr",align:null},"Insert Delete GetRandom O1"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/insert-delete-getrandom-o1"},"https://leetcode.com/problems/insert-delete-getrandom-o1"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"22"),(0,n.kt)("td",{parentName:"tr",align:null},"Can Place Flowers"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/can-place-flowers"},"https://leetcode.com/problems/can-place-flowers"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"23"),(0,n.kt)("td",{parentName:"tr",align:null},"Second Minimum Node In a Binary Tree"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree"},"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"24"),(0,n.kt)("td",{parentName:"tr",align:null},"Partition to K Equal Sum Subsets"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/partition-to-k-equal-sum-subsets"},"https://leetcode.com/problems/partition-to-k-equal-sum-subsets"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"25"),(0,n.kt)("td",{parentName:"tr",align:null},"Max Stack"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://leetcode.com/problems/max-stack"},"https://leetcode.com/problems/max-stack"))))))}d.isMDXComponent=!0}}]);