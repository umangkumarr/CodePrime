"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[7919],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>m});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),u=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},c=function(e){var r=u(e.components);return n.createElement(s.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(t),m=a,b=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return t?n.createElement(b,l(l({ref:r},c),{},{components:t})):n.createElement(b,l({ref:r},c))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=t[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8215:(e,r,t)=>{t.d(r,{Z:()=>a});var n=t(7294);const a=function(e){let{children:r,hidden:t,className:a}=e;return n.createElement("div",{role:"tabpanel",hidden:t,className:a},r)}},9877:(e,r,t)=>{t.d(r,{Z:()=>c});var n=t(7462),a=t(7294),o=t(2389),l=t(5773),i=t(6010);const s="tabItem_LplD";function u(e){var r,t,o;const{lazy:u,block:c,defaultValue:p,values:d,groupId:m,className:b}=e,v=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=d?d:v.map((e=>{let{props:{value:r,label:t,attributes:n}}=e;return{value:r,label:t,attributes:n}})),y=(0,l.lx)(f,((e,r)=>e.value===r.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const h=null===p?p:null!=(r=null!=p?p:null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)?r:null==(o=v[0])?void 0:o.props.value;if(null!==h&&!f.some((e=>e.value===h)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:g,setTabGroupChoices:S}=(0,l.UB)(),[k,w]=(0,a.useState)(h),D=[],{blockElementScrollPositionUntilNextRender:E}=(0,l.o5)();if(null!=m){const e=g[m];null!=e&&e!==k&&f.some((r=>r.value===e))&&w(e)}const O=e=>{const r=e.currentTarget,t=D.indexOf(r),n=f[t].value;n!==k&&(E(r),w(n),null!=m&&S(m,n))},P=e=>{var r;let t=null;switch(e.key){case"ArrowRight":{const r=D.indexOf(e.currentTarget)+1;t=D[r]||D[0];break}case"ArrowLeft":{const r=D.indexOf(e.currentTarget)-1;t=D[r]||D[D.length-1];break}}null==(r=t)||r.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":c},b)},f.map((e=>{let{value:r,label:t,attributes:o}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:k===r?0:-1,"aria-selected":k===r,key:r,ref:e=>D.push(e),onKeyDown:P,onFocus:O,onClick:O},o,{className:(0,i.Z)("tabs__item",s,null==o?void 0:o.className,{"tabs__item--active":k===r})}),null!=t?t:r)}))),u?(0,a.cloneElement)(v.filter((e=>e.props.value===k))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map(((e,r)=>(0,a.cloneElement)(e,{key:r,hidden:e.props.value!==k})))))}function c(e){const r=(0,o.Z)();return a.createElement(u,(0,n.Z)({key:String(r)},e))}},5898:(e,r,t)=>{t.r(r),t.d(r,{frontMatter:()=>i,contentTitle:()=>s,metadata:()=>u,toc:()=>c,default:()=>d});var n=t(7462),a=(t(7294),t(3905)),o=t(9877),l=t(8215);const i={sidebar_position:3},s="Merge two sorted Arrays without extra space",u={unversionedId:"Problems/StriverSDESheet/Day2/Merge Sorted Array",id:"Problems/StriverSDESheet/Day2/Merge Sorted Array",title:"Merge two sorted Arrays without extra space",description:"Problem Link",source:"@site/docs/Problems/StriverSDESheet/Day2/Merge Sorted Array.md",sourceDirName:"Problems/StriverSDESheet/Day2",slug:"/Problems/StriverSDESheet/Day2/Merge Sorted Array",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day2/Merge Sorted Array",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Problems/StriverSDESheet/Day2/Merge Sorted Array.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"api",previous:{title:"Merge Overlapping Subintervals",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day2/Merge Intervals"},next:{title:"Find the Duplicate Number",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day2/Find the Duplicate Number"}},c=[{value:"Problem Link",id:"problem-link",children:[],level:2},{value:"Solution Code",id:"solution-code",children:[],level:2}],p={toc:c};function d(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"merge-two-sorted-arrays-without-extra-space"},"Merge two sorted Arrays without extra space"),(0,a.kt)("h2",{id:"problem-link"},"Problem Link"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/merge-sorted-array/"},"https://leetcode.com/problems/merge-sorted-array/")),(0,a.kt)("h2",{id:"solution-code"},"Solution Code"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\n   public:\n    void merge(vector<int>& arr1, int m, vector<int>& arr2, int n) {\n        vector<int> arr(m + n);\n        int i = 0, j = 0, k = 0;\n        while (i < m && j < n) {\n            if (arr1[i] <= arr2[j])\n                arr[k++] = arr1[i++];\n            else\n                arr[k++] = arr2[j++];\n        }\n        while (i < m) arr[k++] = arr1[i++];\n        while (j < n) arr[k++] = arr2[j++];\n        arr1 = arr;\n    }\n};\n")))))}d.isMDXComponent=!0}}]);