"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[1616],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,f=p["".concat(o,".").concat(d)]||p[d]||m[d]||i;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=p;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var u=2;u<i;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8215:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return c}});var r=n(7462),a=n(7294),i=n(2389),s=n(9548),l=n(6010),o="tabItem_LplD";function u(e){var t,n,i,u=e.lazy,c=e.block,m=e.defaultValue,p=e.values,d=e.groupId,f=e.className,h=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=p?p:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),k=(0,s.lx)(v,(function(e,t){return e.value===t.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===m?m:null!=(t=null!=m?m:null==(n=h.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(i=h[0])?void 0:i.props.value;if(null!==b&&!v.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,s.UB)(),N=g.tabGroupChoices,y=g.setTabGroupChoices,w=(0,a.useState)(b),L=w[0],x=w[1],O=[],T=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var P=N[d];null!=P&&P!==L&&v.some((function(e){return e.value===P}))&&x(P)}var E=function(e){var t=e.currentTarget,n=O.indexOf(t),r=v[n].value;r!==L&&(T(t),x(r),null!=d&&y(d,r))},C=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=O.indexOf(e.currentTarget)+1;n=O[r]||O[0];break;case"ArrowLeft":var a=O.indexOf(e.currentTarget)-1;n=O[a]||O[O.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":c},f)},v.map((function(e){var t=e.value,n=e.label,i=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:L===t?0:-1,"aria-selected":L===t,key:t,ref:function(e){return O.push(e)},onKeyDown:C,onFocus:E,onClick:E},i,{className:(0,l.Z)("tabs__item",o,null==i?void 0:i.className,{"tabs__item--active":L===t})}),null!=n?n:t)}))),u?(0,a.cloneElement)(h.filter((function(e){return e.props.value===L}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==L})}))))}function c(e){var t=(0,i.Z)();return a.createElement(u,(0,r.Z)({key:String(t)},e))}},1755:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return m},toc:function(){return p},default:function(){return f}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),s=n(9877),l=n(8215),o=["components"],u={sidebar_position:7,tags:["Linked List","Divide and Conquer","Heap (Priority Queue)","Merge Sort"]},c="Merge k Sorted Lists",m={unversionedId:"codes/merge-k-sorted-lists",id:"codes/merge-k-sorted-lists",title:"Merge k Sorted Lists",description:"Problem",source:"@site/docs/codes/merge-k-sorted-lists.md",sourceDirName:"codes",slug:"/codes/merge-k-sorted-lists",permalink:"/CodePrime/docs/codes/merge-k-sorted-lists",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/codes/merge-k-sorted-lists.md",tags:[{label:"Linked List",permalink:"/CodePrime/docs/tags/linked-list"},{label:"Divide and Conquer",permalink:"/CodePrime/docs/tags/divide-and-conquer"},{label:"Heap (Priority Queue)",permalink:"/CodePrime/docs/tags/heap-priority-queue"},{label:"Merge Sort",permalink:"/CodePrime/docs/tags/merge-sort"}],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,tags:["Linked List","Divide and Conquer","Heap (Priority Queue)","Merge Sort"]}},p=[{value:"Problem",id:"problem",children:[],level:2},{value:"Solution Approach",id:"solution-approach",children:[],level:2}],d={toc:p};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"merge-k-sorted-lists"},"Merge k Sorted Lists"),(0,i.kt)("h2",{id:"problem"},(0,i.kt)("a",{parentName:"h2",href:"https://leetcode.com/problems/merge-k-sorted-lists/"},"Problem")),(0,i.kt)("p",null,"You are given an array of ",(0,i.kt)("code",null,"k")," linked-lists ",(0,i.kt)("code",null,"lists"),", each linked-list is sorted in ascending order."),(0,i.kt)("p",null,(0,i.kt)("em",null,"Merge all the linked-lists into one sorted linked-list and return it.")),(0,i.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,i.kt)("p",null,"First ",(0,i.kt)("a",{parentName:"p",href:"merge-two-sorted-lists/"},"Merge two linked list")," and merge the third with resultant of the first two and so on."),(0,i.kt)("p",null,"Expected Time complexity: ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"O"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mi",{parentName:"mrow"},"k"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(nk)")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"nk"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Click - to see solution code"),(0,i.kt)(s.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        if (list1 == NULL) return list2;\n        if (list2 == NULL) return list1;\n\n        if (list1->val > list2->val) swap(list1, list2);\n        ListNode *head;\n        head = (ListNode*)malloc(sizeof(ListNode*));\n        head = list1;\n\n        while (list1->next != NULL && list2 != NULL) {\n            if (list1->next->val <= list2->val) {\n                list1 = list1->next;\n                continue;\n            }\n            ListNode *temp;\n            temp = (ListNode*)malloc(sizeof(ListNode*));\n            temp = list2;\n            list2 = list2->next;\n            temp->next = list1->next;\n            list1->next = temp;\n            list1 = list1->next;\n        }\n        if (list2 != NULL) {\n            list1->next = list2;\n        }\n        return head;\n    }\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        ListNode *head;\n        head = (ListNode*)malloc(sizeof(ListNode*));\n\n        if (lists.size() == 0) {\n            head = NULL;\n            return head;\n        }\n\n        head = lists[0];\n        for (int i = 1; i < lists.size(); i++) {\n            head = mergeTwoLists(head, lists[i]);\n        }\n        return head;\n    }\n};        \n"))))))}f.isMDXComponent=!0}}]);