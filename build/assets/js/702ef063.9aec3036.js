"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[9345],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,b=d["".concat(u,".").concat(m)]||d[m]||p[m]||l;return n?r.createElement(b,o(o({ref:t},c),{},{components:n})):r.createElement(b,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(7294);const a=function(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},9877:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(7462),a=n(7294),l=n(2389),o=n(5773),i=n(6010);const u="tabItem_LplD";function s(e){var t,n,l;const{lazy:s,block:c,defaultValue:p,values:d,groupId:m,className:b}=e,f=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=d?d:f.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),k=(0,o.lx)(v,((e,t)=>e.value===t.value));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const h=null===p?p:null!=(t=null!=p?p:null==(n=f.find((e=>e.props.default)))?void 0:n.props.value)?t:null==(l=f[0])?void 0:l.props.value;if(null!==h&&!v.some((e=>e.value===h)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+v.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:y,setTabGroupChoices:g}=(0,o.UB)(),[w,j]=(0,a.useState)(h),O=[],{blockElementScrollPositionUntilNextRender:T}=(0,o.o5)();if(null!=m){const e=y[m];null!=e&&e!==w&&v.some((t=>t.value===e))&&j(e)}const P=e=>{const t=e.currentTarget,n=O.indexOf(t),r=v[n].value;r!==w&&(T(t),j(r),null!=m&&g(m,r))},E=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=O.indexOf(e.currentTarget)+1;n=O[t]||O[0];break}case"ArrowLeft":{const t=O.indexOf(e.currentTarget)-1;n=O[t]||O[O.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":c},b)},v.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>O.push(e),onKeyDown:E,onFocus:P,onClick:P},l,{className:(0,i.Z)("tabs__item",u,null==l?void 0:l.className,{"tabs__item--active":w===t})}),null!=n?n:t)}))),s?(0,a.cloneElement)(f.filter((e=>e.props.value===w))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},f.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function c(e){const t=(0,l.Z)();return a.createElement(s,(0,r.Z)({key:String(t)},e))}},5109:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>u,metadata:()=>s,toc:()=>c,default:()=>d});var r=n(7462),a=(n(7294),n(3905)),l=n(9877),o=n(8215);const i={displayed_sidebar:null,sidebar_position:19,tags:["Array","Two Pointers","Sorting"]},u="4Sum",s={unversionedId:"codes/4Sum",id:"codes/4Sum",title:"4Sum",description:"Problem",source:"@site/docs/codes/4Sum.md",sourceDirName:"codes",slug:"/codes/4Sum",permalink:"/CodePrime/docs/codes/4Sum",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/codes/4Sum.md",tags:[{label:"Array",permalink:"/CodePrime/docs/tags/array"},{label:"Two Pointers",permalink:"/CodePrime/docs/tags/two-pointers"},{label:"Sorting",permalink:"/CodePrime/docs/tags/sorting"}],version:"current",sidebarPosition:19,frontMatter:{displayed_sidebar:null,sidebar_position:19,tags:["Array","Two Pointers","Sorting"]}},c=[{value:"Problem",id:"problem",children:[],level:2},{value:"Solution Approach",id:"solution-approach",children:[],level:2}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"4sum"},"4Sum"),(0,a.kt)("h2",{id:"problem"},(0,a.kt)("a",{parentName:"h2",href:"https://leetcode.com/problems/4sum/"},"Problem")),(0,a.kt)("p",null,"Given an array ",(0,a.kt)("code",null,"nums")," of ",(0,a.kt)("code",null,"n")," integers, return ",(0,a.kt)("em",null,"an array of all the ",(0,a.kt)("strong",null,"unique")," quadruplets")," ",(0,a.kt)("code",null,"[nums[a], nums[b], nums[c], nums[d]]")," such that:"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"0 <= a, b, c, d\xa0< n")),(0,a.kt)("li",null,(0,a.kt)("code",null,"a"),", ",(0,a.kt)("code",null,"b"),", ",(0,a.kt)("code",null,"c"),", and ",(0,a.kt)("code",null,"d")," are ",(0,a.kt)("strong",null,"distinct"),"."),(0,a.kt)("li",null,(0,a.kt)("code",null,"nums[a] + nums[b] + nums[c] + nums[d] == target"))),(0,a.kt)("p",null,"You may return the answer in ",(0,a.kt)("strong",null,"any order"),"."),(0,a.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Click - to see solution code"),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#define ll long long\nclass Solution {\n   public:\n    vector<vector<int>> fourSum(vector<int>& arr, int target) {\n        int n = arr.size();\n        unordered_map<ll, ll> mp;\n        set<vector<int>> ans;\n        vector<int> a;\n\n        for (int i = 0; i < n; i++) mp[arr[i]]++;\n        for (int i = 0; i < n; i++) {\n            mp[arr[i]]--;\n            for (int j = i + 1; j < n; j++) {\n                mp[arr[j]]--;\n                for (int k = j + 1; k < n; k++) {\n                    mp[arr[k]]--;\n                    ll sm = (ll)arr[i] + (ll)arr[k] + (ll)arr[j];\n                    if (mp[target - sm]) {\n                        a = {arr[i], arr[j], arr[k], int(target - sm)};\n                        sort(a.begin(), a.end());\n                        ans.insert(a);\n                    }\n                }\n                for (int k = j + 1; k < n; k++) mp[arr[k]]++;\n            }\n            for (int j = i + 1; j < n; j++) mp[arr[j]]++;\n        }\n        vector<vector<int>> res;\n        for (auto i : ans) res.push_back(i);\n        return res;\n    }\n};\n\n"))))))}d.isMDXComponent=!0}}]);