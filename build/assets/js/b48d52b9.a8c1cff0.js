"use strict";(self.webpackChunkcodeprime=self.webpackChunkcodeprime||[]).push([[5949],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),m=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=m(n),d=a,h=u["".concat(i,".").concat(d)]||u[d]||c[d]||l;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var m=2;m<l;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8215:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(7294);const a=function(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},9877:(e,t,n)=>{n.d(t,{Z:()=>p});var r=n(7462),a=n(7294),l=n(2389),o=n(5773),s=n(6010);const i="tabItem_LplD";function m(e){var t,n,l;const{lazy:m,block:p,defaultValue:c,values:u,groupId:d,className:h}=e,b=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=u?u:b.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),f=(0,o.lx)(v,((e,t)=>e.value===t.value));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===c?c:null!=(t=null!=c?c:null==(n=b.find((e=>e.props.default)))?void 0:n.props.value)?t:null==(l=b[0])?void 0:l.props.value;if(null!==k&&!v.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+v.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:y,setTabGroupChoices:N}=(0,o.UB)(),[g,x]=(0,a.useState)(k),S=[],{blockElementScrollPositionUntilNextRender:E}=(0,o.o5)();if(null!=d){const e=y[d];null!=e&&e!==g&&v.some((t=>t.value===e))&&x(e)}const w=e=>{const t=e.currentTarget,n=S.indexOf(t),r=v[n].value;r!==g&&(E(t),x(r),null!=d&&N(d,r))},O=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=S.indexOf(e.currentTarget)+1;n=S[t]||S[0];break}case"ArrowLeft":{const t=S.indexOf(e.currentTarget)-1;n=S[t]||S[S.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":p},h)},v.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:g===t?0:-1,"aria-selected":g===t,key:t,ref:e=>S.push(e),onKeyDown:O,onFocus:w,onClick:w},l,{className:(0,s.Z)("tabs__item",i,null==l?void 0:l.className,{"tabs__item--active":g===t})}),null!=n?n:t)}))),m?(0,a.cloneElement)(b.filter((e=>e.props.value===g))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},b.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==g})))))}function p(e){const t=(0,l.Z)();return a.createElement(m,(0,r.Z)({key:String(t)},e))}},1432:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>s,contentTitle:()=>i,metadata:()=>m,toc:()=>p,default:()=>u});var r=n(7462),a=(n(7294),n(3905)),l=n(9877),o=n(8215);const s={sidebar_position:6,tags:["Stack"]},i="Next Greater Element I",m={unversionedId:"Problems/StriverSDESheet/Day13/Next Greater Element I",id:"Problems/StriverSDESheet/Day13/Next Greater Element I",title:"Next Greater Element I",description:"Problem Link",source:"@site/docs/Problems/StriverSDESheet/Day13/Next Greater Element I.md",sourceDirName:"Problems/StriverSDESheet/Day13",slug:"/Problems/StriverSDESheet/Day13/Next Greater Element I",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day13/Next Greater Element I",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Problems/StriverSDESheet/Day13/Next Greater Element I.md",tags:[{label:"Stack",permalink:"/CodePrime/docs/tags/stack"}],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,tags:["Stack"]},sidebar:"api",previous:{title:"Valid Parentheses",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day13/Valid Parentheses"},next:{title:"Sort a Stack",permalink:"/CodePrime/docs/Problems/StriverSDESheet/Day13/Sort a Stack"}},p=[{value:"Problem Link",id:"problem-link",children:[],level:2},{value:"Solution Approach",id:"solution-approach",children:[],level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"next-greater-element-i"},"Next Greater Element I"),(0,a.kt)("h2",{id:"problem-link"},"Problem Link"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/next-greater-element-i/"},"https://leetcode.com/problems/next-greater-element-i/")),(0,a.kt)("h2",{id:"solution-approach"},"Solution Approach"),(0,a.kt)("p",null,"Expected Time complexity: ",(0,a.kt)("span",{parentName:"p",className:"math math-inline"},(0,a.kt)("span",{parentName:"span",className:"katex"},(0,a.kt)("span",{parentName:"span",className:"katex-mathml"},(0,a.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,a.kt)("semantics",{parentName:"math"},(0,a.kt)("mrow",{parentName:"semantics"},(0,a.kt)("mi",{parentName:"mrow"},"O"),(0,a.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,a.kt)("mi",{parentName:"mrow"},"n"),(0,a.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,a.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,a.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,a.kt)("span",{parentName:"span",className:"base"},(0,a.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,a.kt)("span",{parentName:"span",className:"mopen"},"("),(0,a.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,a.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Click - to see solution code"),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"void insert(int temp, stack<int>& st) {\n    if (st.size() == 0) {\n        st.push(temp);\n        return;\n    }\n    if (st.top() > temp) {\n        int t = st.top();\n        st.pop();\n        insert(temp, st);\n        st.push(t);\n    } else {\n        st.push(temp);\n    }\n}\nvoid sortStack(stack<int>& st) {\n    class Solution {\n       public:\n        vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n            int n = nums2.size();\n            unordered_map<int, int> mp;\n            for (int j : nums1) {\n                int indx = 0;\n                while (nums2[indx] != j) indx++;\n                while (indx < n && nums2[indx] <= j) indx++;\n                if (indx < n) mp[j] = nums2[indx];\n            }\n            vector<int> ans;\n            for (auto j : nums1)\n                ans.push_back(mp.find(j) != mp.end() ? mp[j] : -1);\n            return ans;\n        }\n    };\n    if (st.size() == 1) return;\n    int temp = st.top();\n    st.pop();\n    sortStack(st);\n    insert(temp, st);\n}\n"))))))}u.isMDXComponent=!0}}]);